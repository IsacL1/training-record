{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\issaclee\\\\nodejs\\\\training-record\\\\frontend\\\\src\\\\Pages\\\\AnalyzeSSR.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst host = 'localhost:3001';\nconst AnalyzeSSR = () => {\n  _s();\n  const [SSRecords, setSSRecords] = useState([]);\n  const [athletesData, setathletesData] = useState([]);\n  useEffect(() => {\n    axios.get(`http://${host}/api/getSSRecord`).then(response => {\n      setSSRecords(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  const athleteNames = Object.keys(athletesData);\n\n  // Helper functions to calculate min, max, and average\n  const getMin = records => {\n    return Math.min(...records.map(record => record.time));\n  };\n  const getMax = records => {\n    return Math.max(...records.map(record => record.time));\n  };\n  const getAverage = records => {\n    const sum = records.reduce((acc, record) => acc + record.time, 0);\n    return sum / records.length;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Athlete Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Min\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Max\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Average\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: athleteNames.map((athleteName, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: athleteName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: getMin(athletesData[athleteName])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: getMax(athletesData[athleteName])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: getAverage(athletesData[athleteName])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(AnalyzeSSR, \"PNOQ5ePcLSxN0ovKzi4vNaJeP+Q=\");\n_c = AnalyzeSSR;\nexport default AnalyzeSSR;\nvar _c;\n$RefreshReg$(_c, \"AnalyzeSSR\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","host","AnalyzeSSR","_s","SSRecords","setSSRecords","athletesData","setathletesData","get","then","response","data","catch","error","console","athleteNames","Object","keys","getMin","records","Math","min","map","record","time","getMax","max","getAverage","sum","reduce","acc","length","children","fileName","_jsxFileName","lineNumber","columnNumber","athleteName","index","_c","$RefreshReg$"],"sources":["C:/Users/issaclee/nodejs/training-record/frontend/src/Pages/AnalyzeSSR.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { SpeedSlalomBasic } from '../Model/Interface';\r\n\r\nconst host = 'localhost:3001';\r\n\r\n\r\nconst AnalyzeSSR = () => {\r\n  const [SSRecords, setSSRecords] = useState<SpeedSlalomBasic[]>([]);\r\n  const [athletesData, setathletesData] = useState<SpeedSlalomBasic[]>([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://${host}/api/getSSRecord`)\r\n      .then(response => {\r\n        setSSRecords(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  const athleteNames = Object.keys(athletesData);\r\n\r\n  // Helper functions to calculate min, max, and average\r\n  const getMin = (records: SpeedSlalomBasic[]) => {\r\n    return Math.min(...records.map(record => record.time));\r\n  };\r\n\r\n  const getMax = (records: SpeedSlalomBasic[]) => {\r\n    return Math.max(...records.map(record => record.time));\r\n  };\r\n\r\n  const getAverage = (records: SpeedSlalomBasic[]) => {\r\n    const sum = records.reduce((acc, record) => acc + record.time, 0);\r\n    return sum / records.length;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Athlete Name</th>\r\n            <th>Min</th>\r\n            <th>Max</th>\r\n            <th>Average</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {athleteNames.map((athleteName, index) => (\r\n            <tr key={index}>\r\n              <td>{athleteName}</td>\r\n              <td>{getMin(athletesData[athleteName])}</td>\r\n              <td>{getMax(athletesData[athleteName])}</td>\r\n              <td>{getAverage(athletesData[athleteName])}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AnalyzeSSR;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}