{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\Project\\\\training-record\\\\frontend\\\\src\\\\Pages\\\\AthleteInfo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { toast } from 'react-toastify';\n//import { AthleteInfoForm } from '../Model/Interface';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AthleteInfo = () => {\n  _s();\n  const [AthleteInfoForm, setAthleteInfoForm] = useState({\n    athleteName: '',\n    bod: new Date(),\n    phone: '',\n    password: '',\n    ConfirmPassword: '',\n    addr: '',\n    HKID4digit: ''\n  });\n  const validatePassword = password => {\n    const hasUppercase = /[A-Z]/.test(password);\n    const hasLowercase = /[a-z]/.test(password);\n    const hasNumber = /\\d/.test(password);\n    const isLongEnough = password.length >= 10;\n    if (!password) {\n      setError('Password is required');\n      return true;\n    }\n    if (!isLongEnough) {\n      setError('Password must be at least 10 characters long');\n      return false;\n    }\n    if (!isLongEnough) {\n      toast.error('Password must be at least 10 characters long');\n      return false;\n    }\n    if (!hasUppercase || !hasLowercase || !hasNumber) {\n      toast.error('Password must contain at least one uppercase letter, one lowercase letter, and one number');\n      return false;\n    }\n    return true;\n  };\n  const [error, setError] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isValidPassword = validatePassword(AthleteInfoForm.password);\n    if (!isValidPassword) {\n      return;\n    }\n\n    // Send data to server\n    axios.post('http://localhost:3001/api/addAthleteInfo', AthleteInfoForm).then(response => {\n      console.log(response.data);\n      toast.success('Data submitted successfully!');\n    }).catch(error => {\n      console.error(error);\n      toast.error('Error submitting data!');\n    });\n  };\n\n  // Handle change - SppedSlalom form  \n  const handleChange = event => {\n    try {\n      setAthleteInfoForm({\n        ...AthleteInfoForm,\n        [event.target.name]: event.target.value\n      });\n      if (event.target.name === 'bod') {\n        const date = new Date(event.target.value);\n        if (date < AthleteInfoForm.bod) {\n          toast.error('Date should not be in the future');\n        } else {\n          setAthleteInfoForm({\n            ...AthleteInfoForm,\n            bod: date\n          });\n        }\n        setAthleteInfoForm({\n          ...AthleteInfoForm,\n          bod: new Date(event.target.value)\n        });\n      }\n    } catch (error) {\n      if (error instanceof RangeError && error.message.includes('Invalid time value')) {\n        toast.error('Invalid date string provided');\n      } else {\n        throw error;\n      }\n    }\n    if (event.target.name === 'phone' && (!/^\\d{8}$/.test(event.target.value) || event.target.value.length > 8)) {\n      toast.error('Phone number must be a numeric value and cannot be longer than 8 digits');\n    } else if (event.target.name === 'HKID4digit' && (!/^[A-Za-z]\\d{3}$/.test(event.target.value) || event.target.value.length < 1 || event.target.value.length > 4)) {\n      toast.error('HKID must be a numeric value and between 1 and 4 digits');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Athlete Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"athleteName\",\n        value: AthleteInfoForm.athleteName,\n        placeholder: \"Your Full Name\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"bod\",\n        value: AthleteInfoForm.bod.toISOString().split('T')[0],\n        max: \"9999-12-31\",\n        placeholder: \"Birthday\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"phone\",\n        value: AthleteInfoForm.phone,\n        placeholder: \"Phone Number\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"addr\",\n        value: AthleteInfoForm.addr,\n        placeholder: \"Address\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"HKID4digit\",\n        value: AthleteInfoForm.HKID4digit,\n        placeholder: \"HKID first 4 digit\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s(AthleteInfo, \"3/frWGDaPDUzWczIoMrvvwzQMEs=\");\n_c = AthleteInfo;\nexport default AthleteInfo;\nvar _c;\n$RefreshReg$(_c, \"AthleteInfo\");","map":{"version":3,"names":["React","useState","toast","axios","jsxDEV","_jsxDEV","AthleteInfo","_s","AthleteInfoForm","setAthleteInfoForm","athleteName","bod","Date","phone","password","ConfirmPassword","addr","HKID4digit","validatePassword","hasUppercase","test","hasLowercase","hasNumber","isLongEnough","length","setError","error","handleSubmit","event","preventDefault","isValidPassword","post","then","response","console","log","data","success","catch","handleChange","target","name","value","date","RangeError","message","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","toISOString","split","max","style","color","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/Project/training-record/frontend/src/Pages/AthleteInfo.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\n//import { AthleteInfoForm } from '../Model/Interface';\r\nimport axios from 'axios';\r\n\r\ninterface AthleteInfoForm {\r\n    athleteId?: string;\r\n    athleteName: string;\r\n    bod: Date;\r\n    phone: string;\r\n    password: string;\r\n    ConfirmPassword: string;\r\n    addr: string;\r\n    HKID4digit: string;\r\n}\r\n\r\n\r\nconst AthleteInfo = () => {\r\n    const [AthleteInfoForm, setAthleteInfoForm] = useState<AthleteInfoForm>({\r\n        athleteName: '',\r\n        bod: new Date(),\r\n        phone: '',\r\n        password: '',\r\n        ConfirmPassword: '',\r\n        addr: '',\r\n        HKID4digit: ''\r\n    });\r\n\r\n    const validatePassword = (password: string) => {\r\n        const hasUppercase = /[A-Z]/.test(password);\r\n        const hasLowercase = /[a-z]/.test(password);\r\n        const hasNumber = /\\d/.test(password);\r\n        const isLongEnough = password.length >= 10;\r\n\r\n        if (!password) {\r\n            setError('Password is required');\r\n            return true;\r\n        }\r\n\r\n        if (!isLongEnough) {\r\n            setError('Password must be at least 10 characters long');\r\n            return false;\r\n        }\r\n\r\n        if (!isLongEnough) {\r\n            toast.error('Password must be at least 10 characters long');\r\n            return false;\r\n        }\r\n\r\n        if (!hasUppercase || !hasLowercase || !hasNumber) {\r\n            toast.error('Password must contain at least one uppercase letter, one lowercase letter, and one number');\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        const isValidPassword = validatePassword(AthleteInfoForm.password);\r\n\r\n        if (!isValidPassword) {\r\n            return;\r\n        }\r\n\r\n        // Send data to server\r\n        axios.post('http://localhost:3001/api/addAthleteInfo', AthleteInfoForm)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                toast.success('Data submitted successfully!');\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                toast.error('Error submitting data!');\r\n            });\r\n\r\n    };\r\n\r\n    // Handle change - SppedSlalom form  \r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n        try {\r\n            setAthleteInfoForm({ ...AthleteInfoForm, [event.target.name]: event.target.value });\r\n\r\n            if (event.target.name === 'bod') {\r\n                const date = new Date(event.target.value);\r\n                if (date < AthleteInfoForm.bod) {\r\n                    toast.error('Date should not be in the future');\r\n                } else {\r\n                    setAthleteInfoForm({ ...AthleteInfoForm, bod: date });\r\n                }\r\n                setAthleteInfoForm({ ...AthleteInfoForm, bod: new Date(event.target.value) });\r\n            }\r\n        } catch (error) {\r\n            if (error instanceof RangeError && error.message.includes('Invalid time value')) {\r\n                toast.error('Invalid date string provided');\r\n            } else {\r\n                throw error;\r\n            }\r\n        }\r\n\r\n        if (event.target.name === 'phone' && (!/^\\d{8}$/.test(event.target.value) || event.target.value.length > 8)) {\r\n            toast.error('Phone number must be a numeric value and cannot be longer than 8 digits');\r\n        } else if (event.target.name === 'HKID4digit' && (!/^[A-Za-z]\\d{3}$/.test(event.target.value) || event.target.value.length < 1 || event.target.value.length > 4)) {\r\n            toast.error('HKID must be a numeric value and between 1 and 4 digits');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='main'><h1 className='title'>Athlete Registration</h1>\r\n            <form onSubmit={handleSubmit} className='form'>\r\n                <input type=\"text\" name=\"athleteName\" value={AthleteInfoForm.athleteName} placeholder=\"Your Full Name\" onChange={handleChange} required />\r\n                <input type=\"date\" name=\"bod\" value={AthleteInfoForm.bod.toISOString().split('T')[0]} max=\"9999-12-31\" placeholder=\"Birthday\" onChange={handleChange} required />\r\n                <input type=\"text\" name=\"phone\" value={AthleteInfoForm.phone} placeholder=\"Phone Number\" onChange={handleChange} required />\r\n                {/* <input type=\"password\" name=\"password\" value={AthleteInfoForm.password} placeholder=\"Password\" onChange={handleChange} required />\r\n                <input type=\"password\" name=\"ConfirmPassword\" value={AthleteInfoForm.ConfirmPassword} placeholder=\"Confirm Password\" onChange={handleChange} required /> */}\r\n                <input type=\"text\" name=\"addr\" value={AthleteInfoForm.addr} placeholder=\"Address\" onChange={handleChange} required />\r\n                <input type=\"text\" name=\"HKID4digit\" value={AthleteInfoForm.HKID4digit} placeholder=\"HKID first 4 digit\" onChange={handleChange} required />\r\n\r\n                <button type=\"submit\">Submit</button>\r\n                {error && <div style={{ color: 'red' }}>{error}</div>}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AthleteInfo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}