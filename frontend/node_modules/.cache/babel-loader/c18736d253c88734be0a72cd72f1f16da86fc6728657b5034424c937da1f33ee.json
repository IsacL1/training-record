{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\issaclee\\\\nodejs\\\\training-record\\\\frontend\\\\src\\\\Pages\\\\AnalyzeSSR.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst host = 'localhost:3001';\nconst AnalyzeSSR = () => {\n  _s();\n  const [SSRecords, setSSRecords] = useState([]);\n  const [athletesData, setAthletesData] = useState({});\n  useEffect(() => {\n    axios.get(`http://${host}/api/getSSRecords`).then(response => {\n      const SSRecords = response.data;\n      const athletesData = {};\n      SSRecords.forEach(record => {\n        const athleteName = record.AthleteName;\n        if (!athletesData[athleteName]) {\n          athletesData[athleteName] = {};\n        }\n        record.SSRecord.forEach(SSRecord => {\n          Object.keys(SSRecord).forEach(key => {\n            if (key !== 'date' && key !== 'side' && key !== 'step') {\n              if (!athletesData[athleteName][key]) {\n                athletesData[athleteName][key] = [];\n              }\n              athletesData[athleteName][key].push(SSRecord[key]);\n            }\n          });\n        });\n      });\n      Object.keys(athletesData).forEach(athleteName => {\n        Object.keys(athletesData[athleteName]).forEach(key => {\n          const values = athletesData[athleteName][key];\n          const min = Math.min(...values);\n          const max = Math.max(...values);\n          const avg = values.reduce((a, b) => a + b, 0) / values.length;\n          athletesData[athleteName][key] = {\n            min,\n            max,\n            avg\n          };\n        });\n      });\n      setAthletesData(athletesData);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Athlete Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Min\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Max\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Average\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(athletesData).map(athleteName => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: athleteName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), Object.keys(athletesData[athleteName]).map(key => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [athletesData[athleteName][key].min, \" (\", key, \".min)\"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)), Object.keys(athletesData[athleteName]).map(key => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [athletesData[athleteName][key].max, \" (\", key, \".max)\"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)), Object.keys(athletesData[athleteName]).map(key => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [athletesData[athleteName][key].avg, \" (\", key, \".avg)\"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this))]\n        }, athleteName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(AnalyzeSSR, \"NkYrJiuvf8NQ0kb9myq7hXR7xrA=\");\n_c = AnalyzeSSR;\nexport default AnalyzeSSR;\nvar _c;\n$RefreshReg$(_c, \"AnalyzeSSR\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","host","AnalyzeSSR","_s","SSRecords","setSSRecords","athletesData","setAthletesData","get","then","response","data","forEach","record","athleteName","AthleteName","SSRecord","Object","keys","key","push","values","min","Math","max","avg","reduce","a","b","length","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/issaclee/nodejs/training-record/frontend/src/Pages/AnalyzeSSR.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { SpeedSlalomBasic } from '../Model/Interface';\r\n\r\nconst host = 'localhost:3001';\r\n\r\n\r\nconst AnalyzeSSR = () => {\r\n\r\n  interface athletesData {\r\n    [key: string]: {\r\n      min: number;\r\n      max: number;\r\n      avg: number;\r\n    };\r\n  }\r\n\r\n  interface SSRecord {\r\n    [key: string]: number | string | boolean; // or whatever types you expect\r\n  }\r\n  const [SSRecords, setSSRecords] = useState<SpeedSlalomBasic[]>([]);\r\n  const [athletesData, setAthletesData] = useState<Record<string, any>>({});\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://${host}/api/getSSRecords`)\r\n      .then(response => {\r\n        const SSRecords = response.data;\r\n        const athletesData: Record<string, any> = {};\r\n\r\n        SSRecords.forEach((record: SpeedSlalomBasic) => {\r\n          const athleteName = record.AthleteName;\r\n          if (!athletesData[athleteName]) {\r\n            athletesData[athleteName] = {};\r\n          }\r\n\r\n          record.SSRecord.forEach((SSRecord: {}) => {\r\n            Object.keys(SSRecord).forEach((key) => {\r\n              if (key !== 'date' && key !== 'side' && key !== 'step') {\r\n                if (!athletesData[athleteName][key]) {\r\n                  athletesData[athleteName][key] = [];\r\n                }\r\n                athletesData[athleteName][key].push(SSRecord[key]);\r\n              }\r\n            });\r\n          });\r\n        });\r\n\r\n        Object.keys(athletesData).forEach((athleteName) => {\r\n          Object.keys(athletesData[athleteName]).forEach((key) => {\r\n            const values = athletesData[athleteName][key];\r\n            const min = Math.min(...values);\r\n            const max = Math.max(...values);\r\n            const avg = values.reduce((a, b) => a + b, 0) / values.length;\r\n\r\n            athletesData[athleteName][key] = { min, max, avg };\r\n          });\r\n        });\r\n\r\n        setAthletesData(athletesData);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Athlete Name</th>\r\n            <th>Min</th>\r\n            <th>Max</th>\r\n            <th>Average</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(athletesData).map((athleteName) => (\r\n            <tr key={athleteName}>\r\n              <td>{athleteName}</td>\r\n              {Object.keys(athletesData[athleteName]).map((key) => (\r\n                <td key={key}>\r\n                  {athletesData[athleteName][key].min} ({key}.min)\r\n                </td>\r\n              ))}\r\n              {Object.keys(athletesData[athleteName]).map((key) => (\r\n                <td key={key}>\r\n                  {athletesData[athleteName][key].max} ({key}.max)\r\n                </td>\r\n              ))}\r\n              {Object.keys(athletesData[athleteName]).map((key) => (\r\n                <td key={key}>\r\n                  {athletesData[athleteName][key].avg} ({key}.avg)\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AnalyzeSSR;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}