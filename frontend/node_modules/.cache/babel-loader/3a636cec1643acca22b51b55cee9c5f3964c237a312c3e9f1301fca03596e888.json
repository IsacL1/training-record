{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\issaclee\\\\nodejs\\\\training-record\\\\frontend\\\\src\\\\Pages\\\\AnalyzeSSR.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeedSlalomRecordTable = ({\n  speedSlalomRecords\n}) => {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    fetchSSRecords();\n  }, []);\n  const fetchSSRecords = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/getSSRecord');\n      const data = response.data;\n      const athleteNames = Array.from(new Set(data.map(SSRecord => SSRecord.AthleteName)));\n      const tableData = athleteNames.map(athleteName => {\n        const athleteRecords = data.filter(SSRecord => SSRecord.AthleteName === athleteName);\n        const times = athleteRecords.map(SSRecord => SSRecord.time).filter(time => time !== null);\n        console.log(athleteName, times);\n        const min = Math.min(...times);\n        const max = Math.max(...times);\n        //const avg = times.length > 0 ? times.reduce((sum, time) => sum + time, 0) / times.length : 0;\n        return {\n          athleteName,\n          min,\n          max\n          //avg,\n        };\n      });\n      setTableData(tableData);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Athlete Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Min SSRecord\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Max SSRecord\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Avg SSRecord\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: tableData.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.athleteName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.min.toFixed(3)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row.max.toFixed(3)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(SpeedSlalomRecordTable, \"qcVQMfdRY2vxgSp5dutEfuJRk7k=\");\n_c = SpeedSlalomRecordTable;\nexport default SpeedSlalomRecordTable;\nvar _c;\n$RefreshReg$(_c, \"SpeedSlalomRecordTable\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SpeedSlalomRecordTable","speedSlalomRecords","_s","tableData","setTableData","fetchSSRecords","response","get","data","athleteNames","Array","from","Set","map","SSRecord","AthleteName","athleteName","athleteRecords","filter","times","time","console","log","min","Math","max","error","children","fileName","_jsxFileName","lineNumber","columnNumber","row","index","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/issaclee/nodejs/training-record/frontend/src/Pages/AnalyzeSSR.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { SpeedSlalomForm } from '../Model/Interface';\r\n\r\ninterface Props {\r\n    speedSlalomRecords: SpeedSlalomForm[];\r\n}\r\n\r\nconst SpeedSlalomRecordTable: React.FC<Props> = ({ speedSlalomRecords }) => {\r\n    const [tableData, setTableData] = useState<{ athleteName: string; min: number; max: number; avg?: number; }[]>([]);\r\n\r\n    useEffect(() => {\r\n        fetchSSRecords();\r\n    }, []);\r\n\r\n    const fetchSSRecords = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:3001/api/getSSRecord');\r\n            const data: SpeedSlalomForm[] = response.data;\r\n            const athleteNames = Array.from(new Set(data.map((SSRecord) => SSRecord.AthleteName)));\r\n            const tableData = athleteNames.map((athleteName) => {\r\n                const athleteRecords = data.filter((SSRecord) => SSRecord.AthleteName === athleteName);\r\n                const times = athleteRecords.map((SSRecord) => SSRecord.time).filter((time) => time !== null);\r\n                console.log(athleteName, times);\r\n                const min = Math.min(...times);\r\n                const max = Math.max(...times);\r\n                //const avg = times.length > 0 ? times.reduce((sum, time) => sum + time, 0) / times.length : 0;\r\n                return {\r\n                    athleteName,\r\n                    min,\r\n                    max,\r\n                    //avg,\r\n                };\r\n            });\r\n            setTableData(tableData);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Athlete Name</th>\r\n                    <th>Min SSRecord</th>\r\n                    <th>Max SSRecord</th>\r\n                    <th>Avg SSRecord</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {tableData.map((row, index) => (\r\n                    <tr key={index}>\r\n                        <td>{row.athleteName}</td>\r\n                        <td>{row.min.toFixed(3)}</td>\r\n                        <td>{row.max.toFixed(3)}</td>\r\n                        {/* <td>{row.avg.toFixed(3)}</td> */}\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default SpeedSlalomRecordTable;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1B,MAAMC,sBAAuC,GAAGA,CAAC;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAqE,EAAE,CAAC;EAElHC,SAAS,CAAC,MAAM;IACZS,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,uCAAuC,CAAC;MACzE,MAAMC,IAAuB,GAAGF,QAAQ,CAACE,IAAI;MAC7C,MAAMC,YAAY,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACJ,IAAI,CAACK,GAAG,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC;MACtF,MAAMZ,SAAS,GAAGM,YAAY,CAACI,GAAG,CAAEG,WAAW,IAAK;QAChD,MAAMC,cAAc,GAAGT,IAAI,CAACU,MAAM,CAAEJ,QAAQ,IAAKA,QAAQ,CAACC,WAAW,KAAKC,WAAW,CAAC;QACtF,MAAMG,KAAK,GAAGF,cAAc,CAACJ,GAAG,CAAEC,QAAQ,IAAKA,QAAQ,CAACM,IAAI,CAAC,CAACF,MAAM,CAAEE,IAAI,IAAKA,IAAI,KAAK,IAAI,CAAC;QAC7FC,OAAO,CAACC,GAAG,CAACN,WAAW,EAAEG,KAAK,CAAC;QAC/B,MAAMI,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,GAAGJ,KAAK,CAAC;QAC9B,MAAMM,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,GAAGN,KAAK,CAAC;QAC9B;QACA,OAAO;UACHH,WAAW;UACXO,GAAG;UACHE;UACA;QACJ,CAAC;MACL,CAAC,CAAC;MACFrB,YAAY,CAACD,SAAS,CAAC;IAC3B,CAAC,CAAC,OAAOuB,KAAK,EAAE;MACZL,OAAO,CAACK,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,oBACI3B,OAAA;IAAA4B,QAAA,gBACI5B,OAAA;MAAA4B,QAAA,eACI5B,OAAA;QAAA4B,QAAA,gBACI5B,OAAA;UAAA4B,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBhC,OAAA;UAAA4B,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBhC,OAAA;UAAA4B,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBhC,OAAA;UAAA4B,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACRhC,OAAA;MAAA4B,QAAA,EACKxB,SAAS,CAACU,GAAG,CAAC,CAACmB,GAAG,EAAEC,KAAK,kBACtBlC,OAAA;QAAA4B,QAAA,gBACI5B,OAAA;UAAA4B,QAAA,EAAKK,GAAG,CAAChB;QAAW;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1BhC,OAAA;UAAA4B,QAAA,EAAKK,GAAG,CAACT,GAAG,CAACW,OAAO,CAAC,CAAC;QAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7BhC,OAAA;UAAA4B,QAAA,EAAKK,GAAG,CAACP,GAAG,CAACS,OAAO,CAAC,CAAC;QAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAHxBE,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB,CAAC;AAAC7B,EAAA,CAtDIF,sBAAuC;AAAAmC,EAAA,GAAvCnC,sBAAuC;AAwD7C,eAAeA,sBAAsB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}