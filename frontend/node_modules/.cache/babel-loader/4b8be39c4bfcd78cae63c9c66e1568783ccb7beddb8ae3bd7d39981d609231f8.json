{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\Project\\\\training-record\\\\frontend\\\\src\\\\Pages\\\\AthleteInfo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { toast } from 'react-toastify';\n//import { AthleteInfoForm } from '../Model/Interface';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction isValidDate(dateString) {\n  const date = new Date(dateString);\n  return !isNaN(date.getTime());\n}\nconst dateString = 'invalid date string';\nif (!isValidDate(dateString)) {\n  console.error('Invalid date string provided');\n  // provide a fallback or error message\n} else {\n  const date = new Date(dateString);\n  // code that uses the date object\n}\nconst AthleteInfo = () => {\n  _s();\n  const [AthleteInfoForm, setAthleteInfoForm] = useState({\n    athleteName: '',\n    bod: new Date(),\n    phone: '',\n    password: '',\n    addr: '',\n    HKID4digit: ''\n  });\n  try {\n    const date = new Date('invalid date string');\n    // code that uses the date object\n  } catch (error) {\n    if (error instanceof RangeError && error.message.includes('Invalid time value')) {\n      console.error('Invalid date string provided');\n      // provide a fallback or error message\n    } else {\n      throw error;\n    }\n  }\n  const handleSubmit = event => {\n    // Send data to server\n    axios.post('http://localhost:3001/api/addSSRecord', AthleteInfoForm).then(response => {\n      console.log(response.data);\n      toast.success('Data submitted successfully!');\n    }).catch(error => {\n      console.error(error);\n      toast.error('Error submitting data!');\n    });\n  };\n\n  // Handle change - SppedSlalom form  \n  const handleChange = event => {\n    try {\n      setAthleteInfoForm({\n        ...AthleteInfoForm,\n        [event.target.name]: event.target.value\n      });\n      if (event.target.name === 'bod') {\n        const date = new Date(event.target.value);\n        setAthleteInfoForm({\n          ...AthleteInfoForm,\n          bod: new Date(event.target.value)\n        });\n      }\n    } catch (error) {\n      if (error instanceof RangeError && error.message.includes('Invalid time value')) {\n        toast.error('Invalid date string provided');\n      } else {\n        throw error;\n      }\n    }\n    if (event.target.name === 'phone' && (!/^\\d{8}$/.test(event.target.value) || event.target.value.length > 8)) {\n      toast.error('Phone number must be a numeric value and cannot be longer than 8 digits');\n    } else if (event.target.name === 'HKID4digit' && (!/^[A-Za-z]\\d{3}$/.test(event.target.value) || event.target.value.length < 1 || event.target.value.length > 4)) {\n      toast.error('HKID must be a numeric value and between 1 and 4 digits');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"tittle\",\n      children: \"Athlete Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"athleteName\",\n        value: AthleteInfoForm.athleteName,\n        placeholder: \"Your Name\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"bod\",\n        value: AthleteInfoForm.bod.toISOString().split('T')[0],\n        placeholder: \"Birthday\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"phone\",\n        value: AthleteInfoForm.phone,\n        placeholder: \"Phone Number\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: AthleteInfoForm.password,\n        placeholder: \"Password\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"addr\",\n        value: AthleteInfoForm.addr,\n        placeholder: \"Address\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"HKID4digit\",\n        value: AthleteInfoForm.HKID4digit,\n        placeholder: \"HKID first 4 digit\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 13\n  }, this);\n};\n_s(AthleteInfo, \"/DYV7imE1hMtcBZl0ixPID2UPYw=\");\n_c = AthleteInfo;\nexport default AthleteInfo;\nvar _c;\n$RefreshReg$(_c, \"AthleteInfo\");","map":{"version":3,"names":["React","useState","toast","axios","jsxDEV","_jsxDEV","isValidDate","dateString","date","Date","isNaN","getTime","console","error","AthleteInfo","_s","AthleteInfoForm","setAthleteInfoForm","athleteName","bod","phone","password","addr","HKID4digit","RangeError","message","includes","handleSubmit","event","post","then","response","log","data","success","catch","handleChange","target","name","value","test","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","toISOString","split","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/Project/training-record/frontend/src/Pages/AthleteInfo.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\n//import { AthleteInfoForm } from '../Model/Interface';\r\nimport axios from 'axios';\r\n\r\ninterface AthleteInfoForm {\r\n    athleteId?: string;\r\n    athleteName: string;\r\n    bod: Date;\r\n    phone: string;\r\n    password: string;\r\n    addr: string;\r\n    HKID4digit: string;\r\n}\r\n\r\nfunction isValidDate(dateString) {\r\n    const date = new Date(dateString);\r\n    return !isNaN(date.getTime());\r\n  }\r\n  \r\n  const dateString = 'invalid date string';\r\n  if (!isValidDate(dateString)) {\r\n    console.error('Invalid date string provided');\r\n    // provide a fallback or error message\r\n  } else {\r\n    const date = new Date(dateString);\r\n    // code that uses the date object\r\n  }\r\n\r\nconst AthleteInfo = () => {\r\n    const [AthleteInfoForm, setAthleteInfoForm] = useState<AthleteInfoForm>({\r\n        athleteName: '',\r\n        bod: new Date(),\r\n        phone: '',\r\n        password: '',\r\n        addr: '',\r\n        HKID4digit: ''\r\n    });\r\n\r\n    try {\r\n        const date = new Date('invalid date string');\r\n        // code that uses the date object\r\n    } catch (error) {\r\n        if (error instanceof RangeError && error.message.includes('Invalid time value')) {\r\n            console.error('Invalid date string provided');\r\n            // provide a fallback or error message\r\n        } else {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n\r\n        // Send data to server\r\n        axios.post('http://localhost:3001/api/addSSRecord', AthleteInfoForm)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                toast.success('Data submitted successfully!');\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                toast.error('Error submitting data!');\r\n            });\r\n\r\n    };\r\n\r\n    // Handle change - SppedSlalom form  \r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        try {\r\n            setAthleteInfoForm({ ...AthleteInfoForm, [event.target.name]: event.target.value });\r\n\r\n            if (event.target.name === 'bod') {\r\n                const date = new Date(event.target.value);\r\n                setAthleteInfoForm({ ...AthleteInfoForm, bod: new Date(event.target.value) });\r\n            }\r\n        } catch (error) {\r\n            if (error instanceof RangeError && error.message.includes('Invalid time value')) {\r\n                toast.error('Invalid date string provided');\r\n            } else {\r\n                throw error;\r\n            }\r\n        }\r\n\r\n            if (event.target.name === 'phone' && (!/^\\d{8}$/.test(event.target.value) || event.target.value.length > 8)) {\r\n                toast.error('Phone number must be a numeric value and cannot be longer than 8 digits');\r\n            } else if (event.target.name === 'HKID4digit' && (!/^[A-Za-z]\\d{3}$/.test(event.target.value) || event.target.value.length < 1 || event.target.value.length > 4)) {\r\n                toast.error('HKID must be a numeric value and between 1 and 4 digits');\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div className='main'><h1 className='tittle'>Athlete Registration</h1>\r\n                <form onSubmit={handleSubmit} className='form'>\r\n                    <input type=\"text\" name=\"athleteName\" value={AthleteInfoForm.athleteName} placeholder=\"Your Name\" onChange={handleChange} required />\r\n                    <input type=\"date\" name=\"bod\" value={AthleteInfoForm.bod.toISOString().split('T')[0]} placeholder=\"Birthday\" onChange={handleChange} required />\r\n                    <input type=\"text\" name=\"phone\" value={AthleteInfoForm.phone} placeholder=\"Phone Number\" onChange={handleChange} required />\r\n                    <input type=\"password\" name=\"password\" value={AthleteInfoForm.password} placeholder=\"Password\" onChange={handleChange} required />\r\n                    <input type=\"text\" name=\"addr\" value={AthleteInfoForm.addr} placeholder=\"Address\" onChange={handleChange} required />\r\n                    <input type=\"text\" name=\"HKID4digit\" value={AthleteInfoForm.HKID4digit} placeholder=\"HKID first 4 digit\" onChange={handleChange} required />\r\n\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    export default AthleteInfo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}