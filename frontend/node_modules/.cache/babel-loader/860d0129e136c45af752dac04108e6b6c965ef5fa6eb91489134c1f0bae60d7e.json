{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\issaclee\\\\nodejs\\\\training-record\\\\frontend\\\\src\\\\Pages\\\\SpeedSlalomRecord.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\n\n/*\r\nfetch('src/Data/SpeedSlalomRecord.json')\r\n  .then(response => response.json())\r\n  .then(data => console.log(data));\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeedSlalom = () => {\n  _s();\n  const [athletes, setAthletes] = useState([]);\n  const [SpeedSlalomForm, setSpeedSlalomForm] = useState({\n    name: '',\n    date: '',\n    side: 'L',\n    step: 0,\n    time: 0.0,\n    missedCone: 0,\n    kickedCone: 0,\n    DQ: false,\n    endLine: false,\n    result: 0.000,\n    notes: ''\n  });\n  useEffect(() => {\n    fetch('src/Data/SpeedSlalomForm.json').then(response => response.json()).then(data => setAthletes(data.athletes));\n  }, []);\n\n  // Handle submit - SpeedSlalom form \n  const handleSubmit = event => {\n    event.preventDefault();\n    // Calculate the result and keep 3 decimal places\n    const result = (Number(SpeedSlalomForm.time) + (Number(SpeedSlalomForm.missedCone) + Number(SpeedSlalomForm.kickedCone)) * 0.2).toFixed(3);\n    console.log(SpeedSlalomForm);\n    setSpeedSlalomForm({\n      ...SpeedSlalomForm,\n      result: parseFloat(result)\n    });\n\n    // Validate the data\n    if (!SpeedSlalomForm.name || !SpeedSlalomForm.date || !SpeedSlalomForm.side || !SpeedSlalomForm.step || !SpeedSlalomForm.time) {\n      toast.error('Please fill in all required fields');\n      return;\n    }\n    if (SpeedSlalomForm.step <= 0 || SpeedSlalomForm.time <= 0 || SpeedSlalomForm.missedCone < 0 || SpeedSlalomForm.kickedCone < 0) {\n      toast.error('Invalid values');\n      return;\n    }\n\n    // Send PUT request to server to update JSON file\n    /*fetch('http://localhost:8001/updateSpeedSlalomRecord', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        name: SpeedSlalomForm.name,\r\n        date: SpeedSlalomForm.date,\r\n        side: SpeedSlalomForm.side,\r\n        step: SpeedSlalomForm.step,\r\n        time: SpeedSlalomForm.time,\r\n        missedCone: SpeedSlalomForm.missedCone,\r\n        kickedCone: SpeedSlalomForm.kickedCone,\r\n        DQ: SpeedSlalomForm.DQ,\r\n        endLine: SpeedSlalomForm.endLine,\r\n        result: parseFloat(result),\r\n        notes: SpeedSlalomForm.notes,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => console.log(data))\r\n      .catch((error) => console.error(error));\r\n    */\n  };\n\n  // Handle change - SppedSlalom form  \n  const handleChange = event => {\n    setSpeedSlalomForm({\n      ...SpeedSlalomForm,\n      [event.target.name]: event.target.value\n    });\n    if (event.target.name === 'endline') {\n      setSpeedSlalomForm({\n        ...SpeedSlalomForm,\n        endLine: event.target.checked\n      });\n    } else {\n      setSpeedSlalomForm({\n        ...SpeedSlalomForm,\n        [event.target.name]: event.target.value\n      });\n    }\n  };\n\n  // get data from speedslalomrecords\n  const [SSRecords, setSSRecords] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch('http://localhost:8001/getSSRecords');\n        if (!res.ok) {\n          throw new Error(`HTTP error! status: ${res.status}`);\n        }\n        const data = await res.json();\n        setSSRecords(data.speedslalomrecords);\n        console.log(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n  const insertDataToSpeedSlalomRecord = data => {\n    try {\n      axios.get('http://localhost:8001/getSpeedSlalomRecord').then(response => {\n        const json = response.data;\n\n        // Find the athlete by name\n        const athlete = json.find(a => a.name === data.name);\n        if (athlete) {\n          // Update the athlete's records\n          athlete.records.push(data);\n        } else {\n          // Create a new athlete\n          json.push({\n            name: data.name,\n            records: [data]\n          });\n        }\n\n        // Send the updated JSON data to the server\n        axios.put('http://localhost:8001/updateSpeedSlalomRecord', json).then(() => {\n          console.log('Data inserted successfully');\n        }).catch(error => {\n          console.error('Error inserting data:', error);\n        });\n      }).catch(error => {\n        console.error('Error getting data:', error);\n      });\n    } catch (error) {\n      console.error('Error inserting data:', error);\n    }\n  };\n\n  // Calculate and test the output\n  /*\r\n  const Cal = () => {\r\n    const result = (Number(SpeedSlalomForm.time) + ((Number(SpeedSlalomForm.missedCone) + Number(SpeedSlalomForm.kickedCone)) * 0.2)).toFixed(3);\r\n    return result;\r\n  }\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"tittle\",\n      children: \"Speed Slalom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          id: \"inputType\",\n          value: SpeedSlalomForm.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          id: \"inputType\",\n          value: SpeedSlalomForm.date || new Date().toISOString().split('T')[0],\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Side: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"side\",\n          id: \"inputType\",\n          value: SpeedSlalomForm.side,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Step: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"step\",\n          id: \"inputType\",\n          value: SpeedSlalomForm.step,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Time: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"time\",\n          id: \"inputType\",\n          value: SpeedSlalomForm.time,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Missed: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"missedCone\",\n          id: \"inputType\",\n          value: SpeedSlalomForm.missedCone == null ? 0 : SpeedSlalomForm.missedCone,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Kicked: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"kickedCone\",\n          id: \"inputType\",\n          value: SpeedSlalomForm.kickedCone == null ? 0 : SpeedSlalomForm.kickedCone,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End line: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"endline\",\n          id: \"inputType\",\n          checked: SpeedSlalomForm.endLine,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"DQ: \", Number(SpeedSlalomForm.kickedCone) + Number(SpeedSlalomForm.missedCone) > 4 || SpeedSlalomForm.endLine ? 'Yes' : 'No']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Notes: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"notes\",\n          id: \"inputType\",\n          value: SpeedSlalomForm.notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Result:  \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"result\",\n          id: \"inputType\",\n          value: SpeedSlalomForm.result,\n          onChange: handleChange,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), SSRecords.map((SSRecords, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [SSRecords[0], \", \", SSRecords[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 45\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeedSlalom, \"Y9DaRjdssr2iX5SgGRA5u34f8/4=\");\n_c = SpeedSlalom;\nexport default SpeedSlalom;\nvar _c;\n$RefreshReg$(_c, \"SpeedSlalom\");","map":{"version":3,"names":["React","useEffect","useState","toast","axios","jsxDEV","_jsxDEV","SpeedSlalom","_s","athletes","setAthletes","SpeedSlalomForm","setSpeedSlalomForm","name","date","side","step","time","missedCone","kickedCone","DQ","endLine","result","notes","fetch","then","response","json","data","handleSubmit","event","preventDefault","Number","toFixed","console","log","parseFloat","error","handleChange","target","value","checked","SSRecords","setSSRecords","fetchData","res","ok","Error","status","speedslalomrecords","insertDataToSpeedSlalomRecord","get","athlete","find","a","records","push","put","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","onChange","required","Date","toISOString","split","disabled","map","index","_c","$RefreshReg$"],"sources":["C:/Users/issaclee/nodejs/training-record/frontend/src/Pages/SpeedSlalomRecord.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport { error } from 'console';\r\n/*\r\nfetch('src/Data/SpeedSlalomRecord.json')\r\n  .then(response => response.json())\r\n  .then(data => console.log(data));\r\n*/\r\n\r\ninterface Athlete {\r\n  name: string;\r\n  records: SpeedSlalomForm[];\r\n}\r\n\r\ninterface SpeedSlalomForm extends Omit<Athlete, 'records'> {\r\n  date: string;\r\n  //interface SpeedSlalomForm extends Athlete {\r\n  side: \"L\" | \"R\";\r\n  step: number;\r\n  time: number;\r\n  missedCone: number;\r\n  kickedCone: number;\r\n  DQ: boolean;\r\n  endLine: boolean;\r\n  result: number;\r\n  notes?: string;\r\n}\r\n\r\nconst SpeedSlalom = () => {\r\n  const [athletes, setAthletes] = useState<Athlete[]>([]);\r\n\r\n  const [SpeedSlalomForm, setSpeedSlalomForm] = useState<SpeedSlalomForm>({\r\n    name: '', date: '', side: 'L', step: 0, time: 0.0,\r\n    missedCone: 0, kickedCone: 0, DQ: false, endLine: false, result: 0.000, notes: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch('src/Data/SpeedSlalomForm.json')\r\n      .then(response => response.json())\r\n      .then(data => setAthletes(data.athletes));\r\n  }, []);\r\n\r\n\r\n  // Handle submit - SpeedSlalom form \r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    // Calculate the result and keep 3 decimal places\r\n    const result = (Number(SpeedSlalomForm.time) + ((Number(SpeedSlalomForm.missedCone) + Number(SpeedSlalomForm.kickedCone)) * 0.2)).toFixed(3);\r\n\r\n    console.log(SpeedSlalomForm);\r\n    setSpeedSlalomForm({ ...SpeedSlalomForm, result: parseFloat(result) });\r\n\r\n    // Validate the data\r\n    if (!SpeedSlalomForm.name || !SpeedSlalomForm.date || !SpeedSlalomForm.side || !SpeedSlalomForm.step || !SpeedSlalomForm.time) {\r\n      toast.error('Please fill in all required fields');\r\n      return;\r\n    }\r\n\r\n    if (SpeedSlalomForm.step <= 0 || SpeedSlalomForm.time <= 0 || SpeedSlalomForm.missedCone < 0 || SpeedSlalomForm.kickedCone < 0) {\r\n      toast.error('Invalid values');\r\n      return;\r\n    }\r\n\r\n    // Send PUT request to server to update JSON file\r\n    /*fetch('http://localhost:8001/updateSpeedSlalomRecord', {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        name: SpeedSlalomForm.name,\r\n        date: SpeedSlalomForm.date,\r\n        side: SpeedSlalomForm.side,\r\n        step: SpeedSlalomForm.step,\r\n        time: SpeedSlalomForm.time,\r\n        missedCone: SpeedSlalomForm.missedCone,\r\n        kickedCone: SpeedSlalomForm.kickedCone,\r\n        DQ: SpeedSlalomForm.DQ,\r\n        endLine: SpeedSlalomForm.endLine,\r\n        result: parseFloat(result),\r\n        notes: SpeedSlalomForm.notes,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => console.log(data))\r\n      .catch((error) => console.error(error));\r\n*/\r\n  };\r\n\r\n  // Handle change - SppedSlalom form  \r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSpeedSlalomForm({ ...SpeedSlalomForm, [event.target.name]: event.target.value });\r\n\r\n    if (event.target.name === 'endline') {\r\n      setSpeedSlalomForm({ ...SpeedSlalomForm, endLine: event.target.checked });\r\n    } else {\r\n      setSpeedSlalomForm({ ...SpeedSlalomForm, [event.target.name]: event.target.value });\r\n    }\r\n  };\r\n\r\n  // get data from speedslalomrecords\r\n  const [SSRecords, setSSRecords] = useState([]);\r\n  useEffect(() => {\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await fetch('http://localhost:8001/getSSRecords')\r\n        if (!res.ok) {\r\n          throw new Error(`HTTP error! status: ${res.status}`);\r\n        }\r\n        const data = await res.json()\r\n        setSSRecords(data.speedslalomrecords)\r\n        console.log(data)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const insertDataToSpeedSlalomRecord = (data: SpeedSlalomForm) => {\r\n    try {\r\n      axios.get('http://localhost:8001/getSpeedSlalomRecord')\r\n        .then((response: { data: any; }) => {\r\n          const json = response.data;\r\n  \r\n          // Find the athlete by name\r\n          const athlete = json.find((a: Athlete) => a.name === data.name);\r\n  \r\n          if (athlete) {\r\n            // Update the athlete's records\r\n            athlete.records.push(data);\r\n          } else {\r\n            // Create a new athlete\r\n            json.push({ name: data.name, records: [data] });\r\n          }\r\n  \r\n          // Send the updated JSON data to the server\r\n          axios.put('http://localhost:8001/updateSpeedSlalomRecord', json)\r\n            .then(() => {\r\n              console.log('Data inserted successfully');\r\n            })\r\n            .catch((error: unknown )=> {\r\n              console.error('Error inserting data:', error);\r\n            });\r\n        })\r\n        .catch((error: unknown ) => {\r\n          console.error('Error getting data:', error);\r\n        });\r\n    } catch (error) {\r\n      console.error('Error inserting data:', error);\r\n    }\r\n  };\r\n\r\n  // Calculate and test the output\r\n  /*\r\n  const Cal = () => {\r\n    const result = (Number(SpeedSlalomForm.time) + ((Number(SpeedSlalomForm.missedCone) + Number(SpeedSlalomForm.kickedCone)) * 0.2)).toFixed(3);\r\n    return result;\r\n  }\r\n  */\r\n\r\n  return (\r\n    <div className='main'><h1 className='tittle'>Speed Slalom</h1>\r\n      <form onSubmit={handleSubmit} className='form'>\r\n        <label>\r\n          Name: <input type=\"text\" name=\"name\" id=\"inputType\" value={SpeedSlalomForm.name} onChange={handleChange} required />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Date: <input type=\"date\" name=\"date\" id=\"inputType\" value={SpeedSlalomForm.date || new Date().toISOString().split('T')[0]} onChange={handleChange} required />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Side: <input type=\"text\" name=\"side\" id=\"inputType\" value={SpeedSlalomForm.side} onChange={handleChange} required />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Step: <input type=\"number\" name=\"step\" id=\"inputType\" value={SpeedSlalomForm.step} onChange={handleChange} required />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Time: <input type=\"number\" name=\"time\" id=\"inputType\" value={SpeedSlalomForm.time} onChange={handleChange} required />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Missed: <input type=\"number\" name=\"missedCone\" id=\"inputType\" value={SpeedSlalomForm.missedCone == null ? 0 : SpeedSlalomForm.missedCone} onChange={handleChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Kicked: <input type=\"number\" name=\"kickedCone\" id=\"inputType\" value={SpeedSlalomForm.kickedCone == null ? 0 : SpeedSlalomForm.kickedCone} onChange={handleChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          End line: <input type=\"checkbox\" name=\"endline\" id=\"inputType\" checked={SpeedSlalomForm.endLine} onChange={handleChange} />\r\n        </label>\r\n        <br />\r\n        <label>{/* checkbox default true? */}\r\n          <p>DQ: {Number(SpeedSlalomForm.kickedCone) + Number(SpeedSlalomForm.missedCone) > 4 || SpeedSlalomForm.endLine ? 'Yes' : 'No'}</p>\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Notes: <input type=\"text\" name=\"notes\" id=\"inputType\" value={SpeedSlalomForm.notes}/>\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Submit</button>\r\n        <br />\r\n        <p>\r\n          Result:  <input type=\"text\" name=\"result\" id=\"inputType\" value={SpeedSlalomForm.result} onChange={handleChange} disabled />\r\n        </p>\r\n        <br />\r\n        {/* to test output\r\n        <p>{Cal()}</p>\r\n        */}\r\n      </form>\r\n\r\n      {SSRecords.map((SSRecords, index) => (<p>{SSRecords[0]}, {SSRecords[1]}</p>))}\r\n      {/*\r\n      <div>\r\n        {athletes.map((athlete, index) => (\r\n          <div key={index}>\r\n            <h2>{athlete.name}</h2>\r\n            <ul>\r\n              {athlete.records.map((record, index) => (\r\n                <li key={index}>\r\n                  <p>Date: {record.date}</p>\r\n                  <p>Side: {record.side}</p>\r\n                  <p>Step: {record.step}</p>\r\n                  <p>Time: {record.time}</p>\r\n                  <p>Missed Cone: {record.missedCone}</p>\r\n                  <p>Kick Cone: {record.kickedCone}</p>\r\n                  <p>DQ: {record.DQ ? 'Yes' : 'No'}</p>\r\n                  <p>End Line: {record.endLine ? 'Yes' : 'No'}</p>\r\n                  <p>Result: {record.result}</p>\r\n                  <p>Notes: {record.notes}</p>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeedSlalom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}