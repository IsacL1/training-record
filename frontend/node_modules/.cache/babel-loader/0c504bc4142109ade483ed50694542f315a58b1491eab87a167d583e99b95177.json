{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\issaclee\\\\nodejs\\\\training-record\\\\frontend\\\\src\\\\Pages\\\\SpeedSlalomRecord.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\n\n/*\r\nfetch('src/Data/SpeedSlalomRecord.json')\r\n  .then(response => response.json())\r\n  .then(data => console.log(data));\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeedSlalom = () => {\n  _s();\n  const [athletes, setAthletes] = useState([]);\n  const inputRef = useRef(null);\n  const [SpeedSlalomForm, setSpeedSlalomForm] = useState({\n    name: '',\n    records: ['', 'L', 0, 0, 0, 0, false, false, 0, '']\n  });\n  useEffect(() => {\n    fetch('src/Data/SpeedSlalomForm.json').then(response => response.json()).then(data => setAthletes(data.athletes));\n  }, []);\n\n  // Handle submit - SpeedSlalom form \n  const handleSubmit = event => {\n    event.preventDefault();\n    // Calculate the result and keep 3 decimal places\n    const result = (Number(SpeedSlalomForm.records[3]) + (Number(SpeedSlalomForm.records[4]) + Number(SpeedSlalomForm.records[5])) * 0.2).toFixed(3);\n    console.log(SpeedSlalomForm);\n    setSpeedSlalomForm({\n      ...SpeedSlalomForm,\n      records: SpeedSlalomForm.records.map((record, index) => {\n        if (index === 8) {\n          return result;\n        }\n        return record;\n      })\n    });\n\n    /*\r\n        // get json from local \r\n        fetch('file:///src/Data/SpeedSlalomRecord.json')\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            // Update data with new form submission\r\n            const updatedData = {\r\n              ...data,\r\n              athletes: [\r\n                ...data.athletes,\r\n                {\r\n                  name: SpeedSlalomForm.name,\r\n                  records: [\r\n                    {\r\n                      date: SpeedSlalomForm.date,\r\n                      side: SpeedSlalomForm.side,\r\n                      step: SpeedSlalomForm.step,\r\n                      time: SpeedSlalomForm.time,\r\n                      missedCone: SpeedSlalomForm.missedCone,\r\n                      kickedCone: SpeedSlalomForm.kickedCone,\r\n                      DQ: SpeedSlalomForm.DQ,\r\n                      endLine: SpeedSlalomForm.endLine,\r\n                      result: result,\r\n                      notes: SpeedSlalomForm.notes,\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            };\r\n    \r\n            // Write updated data back to JSON file\r\n            fetch('file:///src/Data/SpeedSlalomRecord.json', {\r\n              method: 'PUT',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify(updatedData),\r\n            })\r\n              .then(response => response.json())\r\n              .then(data => console.log(data))\r\n              .catch(error => console.error(error));\r\n          })\r\n          .catch(error => console.error(error));\r\n    */\n  };\n\n  // Handle change - SppedSlalom form  \n  const handleChange = event => {\n    setSpeedSlalomForm({\n      ...SpeedSlalomForm,\n      [event.target.name]: event.target.value\n    });\n    if (inputRef.current) {\n      inputRef.current.value = event.target.value;\n    }\n    if (event.target.name === 'endline') {\n      setSpeedSlalomForm({\n        ...SpeedSlalomForm,\n        records: SpeedSlalomForm.records.map((record, index) => {\n          if (index === 7) {\n            return event.target.checked;\n          }\n          return record;\n        })\n      });\n    } else {\n      setSpeedSlalomForm({\n        ...SpeedSlalomForm,\n        [event.target.name]: event.target.value\n      });\n    }\n  };\n\n  // get data from speedslalomrecords\n  const [SSRecords, setSSRecords] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch('http://localhost:8001/getSSRecords');\n        if (!res.ok) {\n          throw new Error(`HTTP error! status: ${res.status}`);\n        }\n        const data = await res.json();\n        setSSRecords(data.speedslalomrecords);\n        console.log(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Calculate and test the output\n  /*\r\n  const Cal = () => {\r\n    const result = (Number(SpeedSlalomForm.time) + ((Number(SpeedSlalomForm.missedCone) + Number(SpeedSlalomForm.kickedCone)) * 0.2)).toFixed(3);\r\n    return result;\r\n  }\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"tittle\",\n      children: \"Speed Slalom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: inputRef,\n          name: \"name\",\n          id: \"inputType\",\n          value: SpeedSlalomForm.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), SpeedSlalomForm.records.map((record, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Date: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            ref: inputRef,\n            name: \"date\",\n            id: \"inputType\",\n            value: record || new Date().toISOString().split('T')[0],\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Side: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ref: inputRef,\n            name: \"side\",\n            id: \"inputType\",\n            value: record,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Step: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            ref: inputRef,\n            name: \"step\",\n            id: \"inputType\",\n            value: record,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Time: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            ref: inputRef,\n            name: \"time\",\n            id: \"inputType\",\n            value: SpeedSlalomForm.records[2],\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Missed: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            ref: inputRef,\n            name: \"missedCone\",\n            id: \"inputType\",\n            value: SpeedSlalomForm.records[4] == null ? 0 : SpeedSlalomForm.records[4],\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Kicked: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            ref: inputRef,\n            name: \"kickedCone\",\n            id: \"inputType\",\n            value: SpeedSlalomForm.records[5] == null ? 0 : SpeedSlalomForm.records[5],\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End line: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          ref: inputRef,\n          name: \"endline\",\n          id: \"inputType\",\n          checked: SpeedSlalomForm.records[7],\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"DQ: \", Number(SpeedSlalomForm.records[5]) + Number(SpeedSlalomForm.records[4]) > 4 || SpeedSlalomForm.records[7] ? 'Yes' : 'No']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Result:  \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"result\",\n          id: \"inputType\",\n          value: SpeedSlalomForm.records[8],\n          onChange: handleChange,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), SSRecords.map((record, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: record.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: record.records.map((r, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Date: \", r.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Side: \", r.side]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Step: \", r.step]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Time: \", r.time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Missed Cone: \", r.missedCone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Kick Cone: \", r.kickedCone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"DQ: \", r.DQ ? 'Yes' : 'No']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"End Line: \", r.endLine ? 'Yes' : 'No']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Result: \", r.result]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Notes: \", r.notes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeedSlalom, \"lrIqDSJfXoFXt7W8a5zPjy1q0Uc=\");\n_c = SpeedSlalom;\nexport default SpeedSlalom;\nvar _c;\n$RefreshReg$(_c, \"SpeedSlalom\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","SpeedSlalom","_s","athletes","setAthletes","inputRef","SpeedSlalomForm","setSpeedSlalomForm","name","records","fetch","then","response","json","data","handleSubmit","event","preventDefault","result","Number","toFixed","console","log","map","record","index","handleChange","target","value","current","checked","SSRecords","setSSRecords","fetchData","res","ok","Error","status","speedslalomrecords","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","ref","id","onChange","Date","toISOString","split","disabled","i","r","date","side","step","time","missedCone","kickedCone","DQ","endLine","notes","_c","$RefreshReg$"],"sources":["C:/Users/issaclee/nodejs/training-record/frontend/src/Pages/SpeedSlalomRecord.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\r\n\r\n/*\r\nfetch('src/Data/SpeedSlalomRecord.json')\r\n  .then(response => response.json())\r\n  .then(data => console.log(data));\r\n*/\r\n\r\ninterface Athlete {\r\n  name: string;\r\n  records: Record<string, any>[];\r\n}\r\n\r\ninterface SpeedSlalomForm extends Athlete {\r\n  records: [\r\n    date: any, // 0\r\n    side: \"L\" | \"R\",  // 1\r\n    step: number, // 2\r\n    time: number, // 3\r\n    missedCone: number, // 4\r\n    kickedCone: number, // 5\r\n    DQ: boolean,  // 6\r\n    endLine: boolean, // 7\r\n    result: any,  // 8\r\n    notes?: string  // 9\r\n  ]\r\n}\r\n\r\nconst SpeedSlalom = () => {\r\n  const [athletes, setAthletes] = useState<Athlete[]>([]);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const [SpeedSlalomForm, setSpeedSlalomForm] = useState<SpeedSlalomForm>({\r\n    name: '',\r\n    records: ['', 'L', 0, 0, 0, 0, false, false, 0, ''],\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch('src/Data/SpeedSlalomForm.json')\r\n      .then(response => response.json())\r\n      .then(data => setAthletes(data.athletes));\r\n  }, []);\r\n\r\n\r\n  // Handle submit - SpeedSlalom form \r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    // Calculate the result and keep 3 decimal places\r\n    const result = (Number(SpeedSlalomForm.records[3]) + ((Number(SpeedSlalomForm.records[4]) + Number(SpeedSlalomForm.records[5])) * 0.2)).toFixed(3);\r\n\r\n    console.log(SpeedSlalomForm);\r\n\r\n    setSpeedSlalomForm({\r\n      ...SpeedSlalomForm,\r\n      records: SpeedSlalomForm.records.map((record, index) => {\r\n        if (index === 8) {\r\n          return result;\r\n        }\r\n        return record;\r\n      }) as [date: any, side: \"L\" | \"R\", step: number, time: number, missedCone: number, kickedCone: number, DQ: boolean, endLine: boolean, result: any, notes?: string | undefined],\r\n    });\r\n\r\n    /*\r\n        // get json from local \r\n        fetch('file:///src/Data/SpeedSlalomRecord.json')\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            // Update data with new form submission\r\n            const updatedData = {\r\n              ...data,\r\n              athletes: [\r\n                ...data.athletes,\r\n                {\r\n                  name: SpeedSlalomForm.name,\r\n                  records: [\r\n                    {\r\n                      date: SpeedSlalomForm.date,\r\n                      side: SpeedSlalomForm.side,\r\n                      step: SpeedSlalomForm.step,\r\n                      time: SpeedSlalomForm.time,\r\n                      missedCone: SpeedSlalomForm.missedCone,\r\n                      kickedCone: SpeedSlalomForm.kickedCone,\r\n                      DQ: SpeedSlalomForm.DQ,\r\n                      endLine: SpeedSlalomForm.endLine,\r\n                      result: result,\r\n                      notes: SpeedSlalomForm.notes,\r\n                    },\r\n                  ],\r\n                },\r\n              ],\r\n            };\r\n    \r\n            // Write updated data back to JSON file\r\n            fetch('file:///src/Data/SpeedSlalomRecord.json', {\r\n              method: 'PUT',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify(updatedData),\r\n            })\r\n              .then(response => response.json())\r\n              .then(data => console.log(data))\r\n              .catch(error => console.error(error));\r\n          })\r\n          .catch(error => console.error(error));\r\n    */\r\n  };\r\n\r\n  // Handle change - SppedSlalom form  \r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSpeedSlalomForm({ ...SpeedSlalomForm, [event.target.name]: event.target.value });\r\n\r\n    if (inputRef.current) {\r\n      inputRef.current.value = event.target.value;\r\n    }\r\n\r\n    if (event.target.name === 'endline') {\r\n      setSpeedSlalomForm({\r\n        ...SpeedSlalomForm,\r\n        records: SpeedSlalomForm.records.map((record, index) => {\r\n          if (index === 7) {\r\n            return event.target.checked;\r\n          }\r\n          return record;\r\n        }) as [date: any, side: \"L\" | \"R\", step: number, time: number, missedCone: number, kickedCone: number, DQ: boolean, endLine: boolean, result: any, notes?: string | undefined],\r\n      });\r\n    } else {\r\n      setSpeedSlalomForm({ ...SpeedSlalomForm, [event.target.name]: event.target.value });\r\n    }\r\n  };\r\n\r\n  // get data from speedslalomrecords\r\n  const [SSRecords, setSSRecords] = useState([]);\r\n  useEffect(() => {\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await fetch('http://localhost:8001/getSSRecords')\r\n        if (!res.ok) {\r\n          throw new Error(`HTTP error! status: ${res.status}`);\r\n        }\r\n        const data = await res.json()\r\n        setSSRecords(data.speedslalomrecords)\r\n        console.log(data)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  // Calculate and test the output\r\n  /*\r\n  const Cal = () => {\r\n    const result = (Number(SpeedSlalomForm.time) + ((Number(SpeedSlalomForm.missedCone) + Number(SpeedSlalomForm.kickedCone)) * 0.2)).toFixed(3);\r\n    return result;\r\n  }\r\n  */\r\n\r\n  return (\r\n    <div className='main'><h1 className='tittle'>Speed Slalom</h1>\r\n      <form onSubmit={handleSubmit} className='form'>\r\n        <label>\r\n          Name: <input type=\"text\" ref={inputRef} name=\"name\" id=\"inputType\" value={SpeedSlalomForm.name} onChange={handleChange} />\r\n        </label>\r\n        <br />\r\n        {SpeedSlalomForm.records.map((record, index) => (\r\n          <div key={index}>\r\n            <label>\r\n              Date: <input type=\"date\" ref={inputRef} name=\"date\" id=\"inputType\" value={record || new Date().toISOString().split('T')[0]} onChange={handleChange} />\r\n            </label>\r\n            <br />\r\n            <label>\r\n              Side: <input type=\"text\" ref={inputRef} name=\"side\" id=\"inputType\" value={record} onChange={handleChange} />\r\n            </label>\r\n            <br />\r\n            <label>\r\n              Step: <input type=\"number\" ref={inputRef} name=\"step\" id=\"inputType\" value={record} onChange={handleChange} />\r\n            </label>\r\n            <br />\r\n            <label>\r\n              Time: <input type=\"number\" ref={inputRef} name=\"time\" id=\"inputType\" value={SpeedSlalomForm.records[2]} onChange={handleChange} />\r\n            </label>\r\n            <br />\r\n            <label>\r\n              Missed: <input type=\"number\" ref={inputRef} name=\"missedCone\" id=\"inputType\" value={SpeedSlalomForm.records[4] == null ? 0 : SpeedSlalomForm.records[4]} onChange={handleChange} />\r\n            </label>\r\n            <br />\r\n            <label>\r\n              Kicked: <input type=\"number\" ref={inputRef} name=\"kickedCone\" id=\"inputType\" value={SpeedSlalomForm.records[5] == null ? 0 : SpeedSlalomForm.records[5]} onChange={handleChange} />\r\n            </label>\r\n            <br />\r\n          </div>\r\n        ))}\r\n        <label>\r\n          End line: <input type=\"checkbox\" ref={inputRef} name=\"endline\" id=\"inputType\" checked={SpeedSlalomForm.records[7]} onChange={handleChange} />\r\n        </label>\r\n        <br />\r\n        <label>{/* checkbox default true? */}\r\n          <p>DQ: {Number(SpeedSlalomForm.records[5]) + Number(SpeedSlalomForm.records[4]) > 4 || SpeedSlalomForm.records[7] ? 'Yes' : 'No'}</p>\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Submit</button>\r\n        <br />\r\n        <p>\r\n          Result:  <input type=\"text\" name=\"result\" id=\"inputType\" value={SpeedSlalomForm.records[8]} onChange={handleChange} disabled />\r\n        </p>\r\n        <br />\r\n        {/* to test output\r\n        <p>{Cal()}</p>\r\n        */}\r\n      </form>\r\n\r\n      {/*SSRecords.map((SSRecords, index) => (<p>{SSRecords[0]}, {SSRecords[1]}</p>))*/}\r\n      {SSRecords.map((record: { name: string, records: any[] }, i: React.Key) => (\r\n        <div key={i}>\r\n          <h2>{record.name}</h2>\r\n          <ul>\r\n            {record.records.map((r: any, i: React.Key) => (\r\n              <li key={i}>\r\n                <p>Date: {r.date}</p>\r\n                <p>Side: {r.side}</p>\r\n                <p>Step: {r.step}</p>\r\n                <p>Time: {r.time}</p>\r\n                <p>Missed Cone: {r.missedCone}</p>\r\n                <p>Kick Cone: {r.kickedCone}</p>\r\n                <p>DQ: {r.DQ ? 'Yes' : 'No'}</p>\r\n                <p>End Line: {r.endLine ? 'Yes' : 'No'}</p>\r\n                <p>Result: {r.result}</p>\r\n                <p>Notes: {r.notes}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpeedSlalom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}