{"ast":null,"code":"import React,{useState}from'react';import{toast}from'react-toastify';//import { AthleteInfoForm } from '../Model/Interface';\nimport axios from'axios';import moment from'moment';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const serverHost='localhost:3001';export async function getNextAthleteId(){try{// Retrieve the total count of documents in the collection\nconst response=await axios.get(`http://${serverHost}/api/athletes/count`);const count=response.data.count;console.log(\"count: \",count);// Increment the count by 1 to get the next ID\nconst nextId=count+1;// Format the ID as per your requirements\nconst formattedId=`S${nextId.toString().padStart(3,'0')}`;console.log(\"formattedId: \",formattedId);return formattedId;}catch(error){console.error('Error retrieving athlete count:',error);throw error;}}const AthleteReg=()=>{const[AthleteInfoForm,setAthleteInfoForm]=useState({athleteId:'',athleteName:'',bod:new Date(),phone:'',password:'',//ConfirmPassword: '',\naddr:'',HKID4digit:''});const validatePassword=password=>{const hasUppercase=/[A-Z]/.test(password);const hasLowercase=/[a-z]/.test(password);const hasNumber=/\\d/.test(password);const isLongEnough=password.length>=10;if(!password){setError('Password is required');return true;}if(!isLongEnough){setError('Password must be at least 10 characters long');return false;}if(!isLongEnough){toast.error('Password must be at least 10 characters long');return false;}if(!hasUppercase||!hasLowercase||!hasNumber){toast.error('Password must contain at least one uppercase letter, one lowercase letter, and one number');return false;}return true;};const validatePhoneNumber=phoneNumber=>{const isValidPhoneNumber=/^\\d{8}$/.test(phoneNumber);if(!isValidPhoneNumber){setError('Support HK number only');return false;}setError('');return true;};const validateHKID=HKID=>{const isValidHKID=/^[A-Z]\\d{3}$/.test(HKID);if(!isValidHKID){setError('Invalid HKID format');return false;}setError('');return true;};const[error,setError]=useState('');const handleSubmit=async event=>{event.preventDefault();const isValidPassword=validatePassword(AthleteInfoForm.password);const isValidPhoneNumber=validatePhoneNumber(AthleteInfoForm.phone);const isValidHKID=validateHKID(AthleteInfoForm.HKID4digit);const newAthleteId=await getNextAthleteId();console.log(\"newAthleteId in post\",newAthleteId);const updatedAthleteInfoForm={...AthleteInfoForm,athleteId:newAthleteId};// Print the updated object to the console\nconsole.log('Updated Athlete Info Form:',updatedAthleteInfoForm);if(!isValidPassword||!isValidPhoneNumber||!isValidHKID){return;}// Send data to server\naxios.post(`http://${serverHost}/api/addAthleteInfo`,updatedAthleteInfoForm).then(response=>{console.log(response.data);setAthleteInfoForm({athleteId:'',athleteName:'',bod:new Date(),phone:'',password:'',//ConfirmPassword: '',\naddr:'',HKID4digit:''});toast.success('Data submitted successfully!');}).catch(error=>{console.error(error);toast.error('Error submitting data!');});};// Handle change - SppedSlalom form  \nconst handleChange=event=>{try{setAthleteInfoForm({...AthleteInfoForm,[event.target.name]:event.target.value});if(event.target.name==='bod'){const date=new Date(event.target.value);if(date<AthleteInfoForm.bod){toast.error('Date should not be in the future');}else{setAthleteInfoForm({...AthleteInfoForm,bod:date});}setAthleteInfoForm({...AthleteInfoForm,bod:new Date(event.target.value)});}}catch(error){if(error instanceof RangeError&&error.message.includes('Invalid time value')){toast.error('Invalid date string provided');}else{throw error;}}// if (event.target.name === 'phone' && (!/^\\d{8}$/.test(event.target.value) || event.target.value.length > 8)) {\n//     toast.error('Phone number must be a numeric value and cannot be longer than 8 digits');\n// } else if (event.target.name === 'HKID4digit' && (!/^[A-Za-z]\\d{3}$/.test(event.target.value) || event.target.value.length < 1 || event.target.value.length > 4)) {\n//     toast.error('HKID must be a numeric value and between 1 and 4 digits');\n// }\n};// Handle file upload\nconst[uploadedFile,setUploadedFile]=useState(null);const[uploadError,setUploadError]=useState(null);const handleFileUpload=event=>{var _event$target$files;const file=(_event$target$files=event.target.files)===null||_event$target$files===void 0?void 0:_event$target$files[0];if(file){setUploadedFile(file);}};const handleUploadClick=async event=>{if(!uploadedFile){toast.error('Please select a file to upload!');return;}const fileReader=new FileReader();fileReader.onload=async event=>{if(event.target){const fileData=event.target.result;const jsonData={file:fileData,type:'application/json'};// const jsonData = JSON.stringify(fileData);\nconsole.log(typeof jsonData);try{const response=await axios.post(`http://${serverHost}/api/uploadAthleteInfo`,jsonData,{headers:{'Content-Type':'application/json'}});console.log(response.data);toast.success('Athlete information uploaded successfully!');}catch(error){console.error(error);setUploadError(null);toast.error('Error uploading athlete information!');}}else{console.error('Error reading file');}};fileReader.readAsText(uploadedFile);};return/*#__PURE__*/_jsxs(\"div\",{className:\"main\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Athlete Registration\"}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"formContent row row-sm\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"formLabel col-sm col-form-label\",children:\"Name: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"athleteName\",className:\"inputBox\",value:AthleteInfoForm.athleteName,placeholder:\"Your Full Name\",onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"span\",{})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"formContent row row-sm\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"formLabel col-sm col-form-label\",children:\"Birthday: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"bod\",className:\"inputBox\",value:moment(AthleteInfoForm.bod).format('YYYY-MM-DD'),placeholder:\"Birthday\",onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"formContent row row-sm\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"formLabel col-sm col-form-label\",children:\"Phone Number: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"phone\",className:\"inputBox\",value:AthleteInfoForm.phone,placeholder:\"Phone Number\",onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"formContent row row-sm\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"formLabel col-sm col-form-label\",children:\"Address: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"addr\",className:\"inputBox\",value:AthleteInfoForm.addr,placeholder:\"Address\",onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"formContent row row-sm\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"formLabel col-sm col-form-label\",children:\"HKID (first 4 digit): \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"HKID4digit\",className:\"inputBox\",value:AthleteInfoForm.HKID4digit.toUpperCase(),placeholder:\"HKID first 4 digit\",onChange:handleChange,required:true})]}),/*#__PURE__*/_jsx(\"div\",{className:\"formContent row row-sm\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"formButton\",children:\"Submit\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"formContent row row-sm\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",className:\"filebutton col-sm\",name:\"file\",accept:\".json, .csv\",onChange:handleFileUpload}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"formButton col-sm\",onClick:handleUploadClick,children:\"Upload\"}),uploadError&&/*#__PURE__*/_jsx(\"div\",{style:{color:'red'},children:uploadError})]}),error&&/*#__PURE__*/_jsx(\"div\",{style:{color:'red'},children:error})]})})]});};export default AthleteReg;","map":{"version":3,"names":["React","useState","toast","axios","moment","jsx","_jsx","jsxs","_jsxs","serverHost","getNextAthleteId","response","get","count","data","console","log","nextId","formattedId","toString","padStart","error","AthleteReg","AthleteInfoForm","setAthleteInfoForm","athleteId","athleteName","bod","Date","phone","password","addr","HKID4digit","validatePassword","hasUppercase","test","hasLowercase","hasNumber","isLongEnough","length","setError","validatePhoneNumber","phoneNumber","isValidPhoneNumber","validateHKID","HKID","isValidHKID","handleSubmit","event","preventDefault","isValidPassword","newAthleteId","updatedAthleteInfoForm","post","then","success","catch","handleChange","target","name","value","date","RangeError","message","includes","uploadedFile","setUploadedFile","uploadError","setUploadError","handleFileUpload","_event$target$files","file","files","handleUploadClick","fileReader","FileReader","onload","fileData","result","jsonData","type","headers","readAsText","className","children","onSubmit","placeholder","onChange","required","format","toUpperCase","accept","onClick","style","color"],"sources":["C:/Users/issaclee/nodejs/training-record/frontend/src/Pages/AthleteReg.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\n//import { AthleteInfoForm } from '../Model/Interface';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nconst serverHost = 'localhost:3001'\r\n\r\ninterface AthleteInfoForm {\r\n    athleteId: string;\r\n    athleteName: string;\r\n    bod: Date;\r\n    phone: string;\r\n    password: string;\r\n    //ConfirmPassword: string;\r\n    addr: string;\r\n    HKID4digit: string;\r\n}\r\n\r\nexport async function getNextAthleteId(): Promise<string> {\r\n    try {\r\n        // Retrieve the total count of documents in the collection\r\n        const response = await axios.get(`http://${serverHost}/api/athletes/count`);\r\n        const count = response.data.count;\r\n        console.log(\"count: \", count);\r\n        // Increment the count by 1 to get the next ID\r\n        const nextId = count + 1;\r\n\r\n        // Format the ID as per your requirements\r\n        const formattedId = `S${nextId.toString().padStart(3, '0')}`;\r\n        console.log(\"formattedId: \", formattedId);\r\n        return formattedId;\r\n    } catch (error) {\r\n        console.error('Error retrieving athlete count:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nconst AthleteReg = () => {\r\n    const [AthleteInfoForm, setAthleteInfoForm] = useState<AthleteInfoForm>({\r\n        athleteId: '',\r\n        athleteName: '',\r\n        bod: new Date(),\r\n        phone: '',\r\n        password: '',\r\n        //ConfirmPassword: '',\r\n        addr: '',\r\n        HKID4digit: ''\r\n    });\r\n\r\n    const validatePassword = (password: string) => {\r\n        const hasUppercase = /[A-Z]/.test(password);\r\n        const hasLowercase = /[a-z]/.test(password);\r\n        const hasNumber = /\\d/.test(password);\r\n        const isLongEnough = password.length >= 10;\r\n\r\n        if (!password) {\r\n            setError('Password is required');\r\n            return true;\r\n        }\r\n\r\n        if (!isLongEnough) {\r\n            setError('Password must be at least 10 characters long');\r\n            return false;\r\n        }\r\n\r\n        if (!isLongEnough) {\r\n            toast.error('Password must be at least 10 characters long');\r\n            return false;\r\n        }\r\n\r\n        if (!hasUppercase || !hasLowercase || !hasNumber) {\r\n            toast.error('Password must contain at least one uppercase letter, one lowercase letter, and one number');\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    const validatePhoneNumber = (phoneNumber: string) => {\r\n        const isValidPhoneNumber = /^\\d{8}$/.test(phoneNumber);\r\n        if (!isValidPhoneNumber) {\r\n            setError('Support HK number only');\r\n            return false;\r\n        }\r\n        setError('');\r\n        return true;\r\n    };\r\n\r\n    const validateHKID = (HKID: string) => {\r\n        const isValidHKID = /^[A-Z]\\d{3}$/.test(HKID);\r\n        if (!isValidHKID) {\r\n            setError('Invalid HKID format');\r\n            return false;\r\n        }\r\n        setError('');\r\n        return true;\r\n    };\r\n\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        const isValidPassword = validatePassword(AthleteInfoForm.password);\r\n        const isValidPhoneNumber = validatePhoneNumber(AthleteInfoForm.phone);\r\n        const isValidHKID = validateHKID(AthleteInfoForm.HKID4digit);\r\n        const newAthleteId = await getNextAthleteId();\r\n        console.log(\"newAthleteId in post\", newAthleteId);\r\n\r\n        const updatedAthleteInfoForm = { ...AthleteInfoForm, athleteId: newAthleteId };\r\n\r\n        // Print the updated object to the console\r\n        console.log('Updated Athlete Info Form:', updatedAthleteInfoForm);\r\n\r\n        if (!isValidPassword || !isValidPhoneNumber || !isValidHKID) {\r\n            return;\r\n        }\r\n\r\n        // Send data to server\r\n        axios.post(`http://${serverHost}/api/addAthleteInfo`, updatedAthleteInfoForm)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setAthleteInfoForm({\r\n                    athleteId: '',\r\n                    athleteName: '',\r\n                    bod: new Date(),\r\n                    phone: '',\r\n                    password: '',\r\n                    //ConfirmPassword: '',\r\n                    addr: '',\r\n                    HKID4digit: ''\r\n                });\r\n                toast.success('Data submitted successfully!');\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                toast.error('Error submitting data!');\r\n            });\r\n    };\r\n\r\n    // Handle change - SppedSlalom form  \r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n        try {\r\n            setAthleteInfoForm({ ...AthleteInfoForm, [event.target.name]: event.target.value });\r\n\r\n            if (event.target.name === 'bod') {\r\n                const date = new Date(event.target.value);\r\n                if (date < AthleteInfoForm.bod) {\r\n                    toast.error('Date should not be in the future');\r\n                } else {\r\n                    setAthleteInfoForm({ ...AthleteInfoForm, bod: date });\r\n                }\r\n                setAthleteInfoForm({ ...AthleteInfoForm, bod: new Date(event.target.value) });\r\n            }\r\n        } catch (error) {\r\n            if (error instanceof RangeError && error.message.includes('Invalid time value')) {\r\n                toast.error('Invalid date string provided');\r\n            } else {\r\n                throw error;\r\n            }\r\n        }\r\n\r\n        // if (event.target.name === 'phone' && (!/^\\d{8}$/.test(event.target.value) || event.target.value.length > 8)) {\r\n        //     toast.error('Phone number must be a numeric value and cannot be longer than 8 digits');\r\n        // } else if (event.target.name === 'HKID4digit' && (!/^[A-Za-z]\\d{3}$/.test(event.target.value) || event.target.value.length < 1 || event.target.value.length > 4)) {\r\n        //     toast.error('HKID must be a numeric value and between 1 and 4 digits');\r\n        // }\r\n    };\r\n\r\n    // Handle file upload\r\n    const [uploadedFile, setUploadedFile] = useState<File | null>(null);\r\n    const [uploadError, setUploadError] = useState(null);\r\n\r\n    const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const file = event.target.files?.[0];\r\n        if (file) {\r\n            setUploadedFile(file);\r\n        }\r\n    };\r\n\r\n    const handleUploadClick = async (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        if (!uploadedFile) {\r\n            toast.error('Please select a file to upload!');\r\n            return;\r\n        }\r\n\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = async (event) => {\r\n            if (event.target) {\r\n                const fileData = event.target.result;\r\n                const jsonData = { file: fileData, type: 'application/json' };\r\n                // const jsonData = JSON.stringify(fileData);\r\n                console.log(typeof jsonData);\r\n            try {\r\n                const response = await axios.post(`http://${serverHost}/api/uploadAthleteInfo`, jsonData, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                });\r\n\r\n                console.log(response.data);\r\n                toast.success('Athlete information uploaded successfully!');\r\n            } catch (error) {\r\n                console.error(error);\r\n                setUploadError(null);\r\n                toast.error('Error uploading athlete information!');\r\n            }\r\n        } else {\r\n            console.error('Error reading file');\r\n        }\r\n        };\r\n        fileReader.readAsText(uploadedFile);\r\n    };\r\n\r\n    return (\r\n        <div className='main'>\r\n            <h1 className='title'>Athlete Registration</h1>\r\n            <div className='container'>\r\n                <form className='form' onSubmit={handleSubmit}>\r\n                    <div className=\"formContent row row-sm\">\r\n                        <label className=\"formLabel col-sm col-form-label\">Name: </label>\r\n                        <input type=\"text\" name=\"athleteName\" className=\"inputBox\" value={AthleteInfoForm.athleteName} placeholder=\"Your Full Name\" onChange={handleChange} required />\r\n                        <span></span>\r\n                    </div>\r\n\r\n                    <div className=\"formContent row row-sm\">\r\n                        <label className=\"formLabel col-sm col-form-label\">Birthday: </label>\r\n                        {/* <input type=\"date\" name=\"bod\" value={AthleteInfoForm.bod.toISOString().split('T')[0] format=\"yyyy-MM-dd\"} max=\"9999-12-31\" placeholder=\"Birthday\" onChange={handleChange} required /> */}\r\n                        <input type=\"date\" name=\"bod\" className=\"inputBox\" value={moment(AthleteInfoForm.bod).format('YYYY-MM-DD')} placeholder=\"Birthday\" onChange={handleChange} required />\r\n                    </div>\r\n\r\n                    <div className=\"formContent row row-sm\">\r\n                        <label className=\"formLabel col-sm col-form-label\">Phone Number: </label>\r\n                        <input type=\"text\" name=\"phone\" className=\"inputBox\" value={AthleteInfoForm.phone} placeholder=\"Phone Number\" onChange={handleChange} required />\r\n                        {/* <input type=\"password\" name=\"password\" value={AthleteInfoForm.password} placeholder=\"Password\" onChange={handleChange} required />\r\n                <input type=\"password\" name=\"ConfirmPassword\" value={AthleteInfoForm.ConfirmPassword} placeholder=\"Confirm Password\" onChange={handleChange} required /> */}\r\n                    </div>\r\n\r\n                    <div className=\"formContent row row-sm\">\r\n                        <label className=\"formLabel col-sm col-form-label\">Address: </label>\r\n                        <input type=\"text\" name=\"addr\" className=\"inputBox\" value={AthleteInfoForm.addr} placeholder=\"Address\" onChange={handleChange} required />\r\n                    </div>\r\n\r\n                    <div className=\"formContent row row-sm\">\r\n                        <label className=\"formLabel col-sm col-form-label\">HKID (first 4 digit): </label>\r\n                        <input type=\"text\" name=\"HKID4digit\" className=\"inputBox\" value={AthleteInfoForm.HKID4digit.toUpperCase()} placeholder=\"HKID first 4 digit\" onChange={handleChange} required />\r\n                    </div>\r\n                    <div className=\"formContent row row-sm\">\r\n                        <button type=\"submit\" className='formButton'>Submit</button>\r\n                    </div>\r\n\r\n                    <div className=\"formContent row row-sm\">\r\n                        <input type=\"file\" className='filebutton col-sm' name=\"file\" accept=\".json, .csv\" onChange={handleFileUpload} />\r\n                        <button type=\"button\" className='formButton col-sm' onClick={handleUploadClick}>Upload</button>\r\n                        {uploadError && <div style={{ color: 'red' }}>{uploadError}</div>}\r\n                    </div>\r\n\r\n                    {error && <div style={{ color: 'red' }}>{error}</div>}\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AthleteReg;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}