{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\issaclee\\\\nodejs\\\\training-record\\\\frontend\\\\src\\\\Pages\\\\AthleteReg.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { toast } from 'react-toastify';\n//import { AthleteInfoForm } from '../Model/Interface';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst serverHost = 'localhost:3001';\nexport async function getNextAthleteId() {\n  try {\n    // Retrieve the total count of documents in the collection\n    const response = await axios.get(`http://${serverHost}/api/athletes/count`);\n    const count = response.data.count;\n    console.log(\"count: \", count);\n    // Increment the count by 1 to get the next ID\n    const nextId = count + 1;\n\n    // Format the ID as per your requirements\n    const formattedId = `S${nextId.toString().padStart(3, '0')}`;\n    console.log(\"formattedId: \", formattedId);\n    return formattedId;\n  } catch (error) {\n    console.error('Error retrieving athlete count:', error);\n    throw error;\n  }\n}\nconst AthleteReg = () => {\n  _s();\n  const [AthleteInfoForm, setAthleteInfoForm] = useState({\n    athleteId: '',\n    athleteName: '',\n    bod: new Date(),\n    phone: '',\n    password: '',\n    //ConfirmPassword: '',\n    addr: '',\n    HKID4digit: ''\n  });\n  const validatePassword = password => {\n    const hasUppercase = /[A-Z]/.test(password);\n    const hasLowercase = /[a-z]/.test(password);\n    const hasNumber = /\\d/.test(password);\n    const isLongEnough = password.length >= 10;\n    if (!password) {\n      setError('Password is required');\n      return true;\n    }\n    if (!isLongEnough) {\n      setError('Password must be at least 10 characters long');\n      return false;\n    }\n    if (!isLongEnough) {\n      toast.error('Password must be at least 10 characters long');\n      return false;\n    }\n    if (!hasUppercase || !hasLowercase || !hasNumber) {\n      toast.error('Password must contain at least one uppercase letter, one lowercase letter, and one number');\n      return false;\n    }\n    return true;\n  };\n  const validatePhoneNumber = phoneNumber => {\n    const isValidPhoneNumber = /^\\d{8}$/.test(phoneNumber);\n    if (!isValidPhoneNumber) {\n      setError('Support HK number only');\n      return false;\n    }\n    setError('');\n    return true;\n  };\n  const validateHKID = HKID => {\n    const isValidHKID = /^[A-Z]\\d{3}$/.test(HKID);\n    if (!isValidHKID) {\n      setError('Invalid HKID format');\n      return false;\n    }\n    setError('');\n    return true;\n  };\n  const [error, setError] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const isValidPassword = validatePassword(AthleteInfoForm.password);\n    const isValidPhoneNumber = validatePhoneNumber(AthleteInfoForm.phone);\n    const isValidHKID = validateHKID(AthleteInfoForm.HKID4digit);\n    const newAthleteId = await getNextAthleteId();\n    console.log(\"newAthleteId in post\", newAthleteId);\n    const updatedAthleteInfoForm = {\n      ...AthleteInfoForm,\n      athleteId: newAthleteId\n    };\n\n    // Print the updated object to the console\n    console.log('Updated Athlete Info Form:', updatedAthleteInfoForm);\n    if (!isValidPassword || !isValidPhoneNumber || !isValidHKID) {\n      return;\n    }\n\n    // Send data to server\n    axios.post(`http://${serverHost}/api/addAthleteInfo`, updatedAthleteInfoForm).then(response => {\n      console.log(response.data);\n      setAthleteInfoForm({\n        athleteId: '',\n        athleteName: '',\n        bod: new Date(),\n        phone: '',\n        password: '',\n        //ConfirmPassword: '',\n        addr: '',\n        HKID4digit: ''\n      });\n      toast.success('Data submitted successfully!');\n    }).catch(error => {\n      console.error(error);\n      toast.error('Error submitting data!');\n    });\n  };\n\n  // Handle change - SppedSlalom form  \n  const handleChange = event => {\n    try {\n      setAthleteInfoForm({\n        ...AthleteInfoForm,\n        [event.target.name]: event.target.value\n      });\n      if (event.target.name === 'bod') {\n        const date = new Date(event.target.value);\n        if (date < AthleteInfoForm.bod) {\n          toast.error('Date should not be in the future');\n        } else {\n          setAthleteInfoForm({\n            ...AthleteInfoForm,\n            bod: date\n          });\n        }\n        setAthleteInfoForm({\n          ...AthleteInfoForm,\n          bod: new Date(event.target.value)\n        });\n      }\n    } catch (error) {\n      if (error instanceof RangeError && error.message.includes('Invalid time value')) {\n        toast.error('Invalid date string provided');\n      } else {\n        throw error;\n      }\n    }\n\n    // if (event.target.name === 'phone' && (!/^\\d{8}$/.test(event.target.value) || event.target.value.length > 8)) {\n    //     toast.error('Phone number must be a numeric value and cannot be longer than 8 digits');\n    // } else if (event.target.name === 'HKID4digit' && (!/^[A-Za-z]\\d{3}$/.test(event.target.value) || event.target.value.length < 1 || event.target.value.length > 4)) {\n    //     toast.error('HKID must be a numeric value and between 1 and 4 digits');\n    // }\n  };\n  const [uploadedFile, setUploadedFile] = useState(null);\n  const [uploadError, setUploadError] = useState(null);\n  const handleFileUpload = event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file) {\n      setUploadedFile(file);\n    }\n  };\n  const uploadAthleteInfo = async file => {\n    if (!file) {\n      toast.error('Please select a file to upload!');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post(`http://${serverHost}/api/uploadAthleteInfo`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data' // Changed to multipart/form-data\n        }\n      });\n      console.log(response.data);\n      toast.success('Athlete information uploaded successfully!');\n    } catch (error) {\n      console.error(error);\n      setUploadError(null);\n      toast.error('Error uploading athlete information!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Athlete Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formContent row md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formLabel col-sm-2 col-md-4 col-form-label\",\n            children: \"Name: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"athleteName\",\n            className: \"inputBox\",\n            value: AthleteInfoForm.athleteName,\n            placeholder: \"Your Full Name\",\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formContent row md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formLabel col-sm-2 col-md-4 col-form-label\",\n            children: \"Birthday: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"bod\",\n            className: \"inputBox\",\n            value: moment(AthleteInfoForm.bod).format('YYYY-MM-DD'),\n            placeholder: \"Birthday\",\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formContent row md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formLabel col-sm-2 col-md-4 col-form-label\",\n            children: \"Phone Number: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"phone\",\n            className: \"inputBox\",\n            value: AthleteInfoForm.phone,\n            placeholder: \"Phone Number\",\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formContent row md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formLabel col-sm-2 col-md-4 col-form-label\",\n            children: \"Address: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"addr\",\n            className: \"inputBox\",\n            value: AthleteInfoForm.addr,\n            placeholder: \"Address\",\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formContent row md-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"formLabel col-sm-2 col-md-4 col-form-label\",\n            children: \"HKID (first 4 digit): \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"HKID4digit\",\n            className: \"inputBox\",\n            value: AthleteInfoForm.HKID4digit.toUpperCase(),\n            placeholder: \"HKID first 4 digit\",\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formContent row md-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"formButton\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'red'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"formButton  col-sm-1 col-md-4\",\n            name: \"file\",\n            accept: \".json, .csv\",\n            onChange: handleFileUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"formButton  col-sm-1 col-md-1\",\n            onClick: handleUploadClick,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this), uploadError && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: 'red'\n            },\n            children: uploadError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 9\n  }, this);\n};\n_s(AthleteReg, \"heYyBhe9Pzj4UMSR/3Ych1D76gU=\");\n_c = AthleteReg;\nexport default AthleteReg;\nvar _c;\n$RefreshReg$(_c, \"AthleteReg\");","map":{"version":3,"names":["React","useState","toast","axios","moment","jsxDEV","_jsxDEV","serverHost","getNextAthleteId","response","get","count","data","console","log","nextId","formattedId","toString","padStart","error","AthleteReg","_s","AthleteInfoForm","setAthleteInfoForm","athleteId","athleteName","bod","Date","phone","password","addr","HKID4digit","validatePassword","hasUppercase","test","hasLowercase","hasNumber","isLongEnough","length","setError","validatePhoneNumber","phoneNumber","isValidPhoneNumber","validateHKID","HKID","isValidHKID","handleSubmit","event","preventDefault","isValidPassword","newAthleteId","updatedAthleteInfoForm","post","then","success","catch","handleChange","target","name","value","date","RangeError","message","includes","uploadedFile","setUploadedFile","uploadError","setUploadError","handleFileUpload","_event$target$files","file","files","uploadAthleteInfo","formData","FormData","append","headers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","format","toUpperCase","style","color","accept","onClick","handleUploadClick","_c","$RefreshReg$"],"sources":["C:/Users/issaclee/nodejs/training-record/frontend/src/Pages/AthleteReg.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\n//import { AthleteInfoForm } from '../Model/Interface';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nconst serverHost = 'localhost:3001'\r\n\r\ninterface AthleteInfoForm {\r\n    athleteId: string;\r\n    athleteName: string;\r\n    bod: Date;\r\n    phone: string;\r\n    password: string;\r\n    //ConfirmPassword: string;\r\n    addr: string;\r\n    HKID4digit: string;\r\n}\r\n\r\nexport async function getNextAthleteId(): Promise<string> {\r\n    try {\r\n        // Retrieve the total count of documents in the collection\r\n        const response = await axios.get(`http://${serverHost}/api/athletes/count`);\r\n        const count = response.data.count;\r\n        console.log(\"count: \", count);\r\n        // Increment the count by 1 to get the next ID\r\n        const nextId = count + 1;\r\n\r\n        // Format the ID as per your requirements\r\n        const formattedId = `S${nextId.toString().padStart(3, '0')}`;\r\n        console.log(\"formattedId: \", formattedId);\r\n        return formattedId;\r\n    } catch (error) {\r\n        console.error('Error retrieving athlete count:', error);\r\n        throw error;\r\n    }\r\n}\r\n\r\nconst AthleteReg = () => {\r\n    const [AthleteInfoForm, setAthleteInfoForm] = useState<AthleteInfoForm>({\r\n        athleteId: '',\r\n        athleteName: '',\r\n        bod: new Date(),\r\n        phone: '',\r\n        password: '',\r\n        //ConfirmPassword: '',\r\n        addr: '',\r\n        HKID4digit: ''\r\n    });\r\n\r\n    const validatePassword = (password: string) => {\r\n        const hasUppercase = /[A-Z]/.test(password);\r\n        const hasLowercase = /[a-z]/.test(password);\r\n        const hasNumber = /\\d/.test(password);\r\n        const isLongEnough = password.length >= 10;\r\n\r\n        if (!password) {\r\n            setError('Password is required');\r\n            return true;\r\n        }\r\n\r\n        if (!isLongEnough) {\r\n            setError('Password must be at least 10 characters long');\r\n            return false;\r\n        }\r\n\r\n        if (!isLongEnough) {\r\n            toast.error('Password must be at least 10 characters long');\r\n            return false;\r\n        }\r\n\r\n        if (!hasUppercase || !hasLowercase || !hasNumber) {\r\n            toast.error('Password must contain at least one uppercase letter, one lowercase letter, and one number');\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    const validatePhoneNumber = (phoneNumber: string) => {\r\n        const isValidPhoneNumber = /^\\d{8}$/.test(phoneNumber);\r\n        if (!isValidPhoneNumber) {\r\n            setError('Support HK number only');\r\n            return false;\r\n        }\r\n        setError('');\r\n        return true;\r\n    };\r\n\r\n    const validateHKID = (HKID: string) => {\r\n        const isValidHKID = /^[A-Z]\\d{3}$/.test(HKID);\r\n        if (!isValidHKID) {\r\n            setError('Invalid HKID format');\r\n            return false;\r\n        }\r\n        setError('');\r\n        return true;\r\n    };\r\n\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n\r\n        const isValidPassword = validatePassword(AthleteInfoForm.password);\r\n        const isValidPhoneNumber = validatePhoneNumber(AthleteInfoForm.phone);\r\n        const isValidHKID = validateHKID(AthleteInfoForm.HKID4digit);\r\n        const newAthleteId = await getNextAthleteId();\r\n        console.log(\"newAthleteId in post\", newAthleteId);\r\n\r\n        const updatedAthleteInfoForm = { ...AthleteInfoForm, athleteId: newAthleteId };\r\n\r\n        // Print the updated object to the console\r\n        console.log('Updated Athlete Info Form:', updatedAthleteInfoForm);\r\n\r\n        if (!isValidPassword || !isValidPhoneNumber || !isValidHKID) {\r\n            return;\r\n        }\r\n\r\n        // Send data to server\r\n        axios.post(`http://${serverHost}/api/addAthleteInfo`, updatedAthleteInfoForm)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setAthleteInfoForm({\r\n                    athleteId: '',\r\n                    athleteName: '',\r\n                    bod: new Date(),\r\n                    phone: '',\r\n                    password: '',\r\n                    //ConfirmPassword: '',\r\n                    addr: '',\r\n                    HKID4digit: ''\r\n                });\r\n                toast.success('Data submitted successfully!');\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n                toast.error('Error submitting data!');\r\n            });\r\n    };\r\n\r\n    // Handle change - SppedSlalom form  \r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n        try {\r\n            setAthleteInfoForm({ ...AthleteInfoForm, [event.target.name]: event.target.value });\r\n\r\n            if (event.target.name === 'bod') {\r\n                const date = new Date(event.target.value);\r\n                if (date < AthleteInfoForm.bod) {\r\n                    toast.error('Date should not be in the future');\r\n                } else {\r\n                    setAthleteInfoForm({ ...AthleteInfoForm, bod: date });\r\n                }\r\n                setAthleteInfoForm({ ...AthleteInfoForm, bod: new Date(event.target.value) });\r\n            }\r\n        } catch (error) {\r\n            if (error instanceof RangeError && error.message.includes('Invalid time value')) {\r\n                toast.error('Invalid date string provided');\r\n            } else {\r\n                throw error;\r\n            }\r\n        }\r\n\r\n        // if (event.target.name === 'phone' && (!/^\\d{8}$/.test(event.target.value) || event.target.value.length > 8)) {\r\n        //     toast.error('Phone number must be a numeric value and cannot be longer than 8 digits');\r\n        // } else if (event.target.name === 'HKID4digit' && (!/^[A-Za-z]\\d{3}$/.test(event.target.value) || event.target.value.length < 1 || event.target.value.length > 4)) {\r\n        //     toast.error('HKID must be a numeric value and between 1 and 4 digits');\r\n        // }\r\n    };\r\n\r\n    const [uploadedFile, setUploadedFile] = useState<File | null>(null);\r\n    const [uploadError, setUploadError] = useState(null);\r\n\r\n    const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const file = event.target.files?.[0];\r\n        if (file) {\r\n          setUploadedFile(file);\r\n        }\r\n      };\r\n      \r\n      const uploadAthleteInfo = async (file: File) => {\r\n        if (!file) {\r\n          toast.error('Please select a file to upload!');\r\n          return;\r\n        }\r\n      \r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n      \r\n        try {\r\n          const response = await axios.post(`http://${serverHost}/api/uploadAthleteInfo`, formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data', // Changed to multipart/form-data\r\n            },\r\n          });\r\n      \r\n          console.log(response.data);\r\n          toast.success('Athlete information uploaded successfully!');\r\n        } catch (error) {\r\n          console.error(error);\r\n          setUploadError(null);\r\n          toast.error('Error uploading athlete information!');\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div className='main'>\r\n            <h1 className='title'>Athlete Registration</h1>\r\n            <div className='container'>\r\n                <form className='form' onSubmit={handleSubmit}>\r\n                    <div className=\"formContent row md-3\">\r\n                        <label className=\"formLabel col-sm-2 col-md-4 col-form-label\">Name: </label>\r\n                        <input type=\"text\" name=\"athleteName\" className=\"inputBox\" value={AthleteInfoForm.athleteName} placeholder=\"Your Full Name\" onChange={handleChange} required />\r\n                        <span></span>\r\n                    </div>\r\n\r\n                    <div className=\"formContent row md-3\">\r\n                        <label className=\"formLabel col-sm-2 col-md-4 col-form-label\">Birthday: </label>\r\n                        {/* <input type=\"date\" name=\"bod\" value={AthleteInfoForm.bod.toISOString().split('T')[0] format=\"yyyy-MM-dd\"} max=\"9999-12-31\" placeholder=\"Birthday\" onChange={handleChange} required /> */}\r\n                        <input type=\"date\" name=\"bod\" className=\"inputBox\" value={moment(AthleteInfoForm.bod).format('YYYY-MM-DD')} placeholder=\"Birthday\" onChange={handleChange} required />\r\n                    </div>\r\n\r\n                    <div className=\"formContent row md-3\">\r\n                        <label className=\"formLabel col-sm-2 col-md-4 col-form-label\">Phone Number: </label>\r\n                        <input type=\"text\" name=\"phone\" className=\"inputBox\" value={AthleteInfoForm.phone} placeholder=\"Phone Number\" onChange={handleChange} required />\r\n                        {/* <input type=\"password\" name=\"password\" value={AthleteInfoForm.password} placeholder=\"Password\" onChange={handleChange} required />\r\n                <input type=\"password\" name=\"ConfirmPassword\" value={AthleteInfoForm.ConfirmPassword} placeholder=\"Confirm Password\" onChange={handleChange} required /> */}\r\n                    </div>\r\n\r\n                    <div className=\"formContent row md-3\">\r\n                        <label className=\"formLabel col-sm-2 col-md-4 col-form-label\">Address: </label>\r\n                        <input type=\"text\" name=\"addr\" className=\"inputBox\" value={AthleteInfoForm.addr} placeholder=\"Address\" onChange={handleChange} required />\r\n                    </div>\r\n\r\n                    <div className=\"formContent row md-3\">\r\n                        <label className=\"formLabel col-sm-2 col-md-4 col-form-label\">HKID (first 4 digit): </label>\r\n                        <input type=\"text\" name=\"HKID4digit\" className=\"inputBox\" value={AthleteInfoForm.HKID4digit.toUpperCase()} placeholder=\"HKID first 4 digit\" onChange={handleChange} required />\r\n                    </div>\r\n                    <div className=\"formContent row md-3\">\r\n                        <button type=\"submit\" className='formButton'>Submit</button>\r\n                    </div>\r\n\r\n                    {error && <div style={{ color: 'red' }}>{error}</div>}\r\n\r\n                </form>\r\n                <form className='form'>\r\n                    <div>\r\n                        <input type=\"file\" className='formButton  col-sm-1 col-md-4' name=\"file\" accept=\".json, .csv\" onChange={handleFileUpload} />\r\n                        <button type=\"button\" className='formButton  col-sm-1 col-md-1' onClick={handleUploadClick}>Upload</button>\r\n                        {uploadError && <div style={{ color: 'red' }}>{uploadError}</div>}\r\n                    </div>\r\n                </form>\r\n\r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AthleteReg;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}